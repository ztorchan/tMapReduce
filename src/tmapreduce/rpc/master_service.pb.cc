// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master_service.proto

#include "master_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_master_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CompleteMapMsg_KV_master_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_master_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LaunchMsg_KV_master_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_master_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MasterReplyMsg_master_5fservice_2eproto;
namespace tmapreduce {
class MasterReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MasterReplyMsg> _instance;
} _MasterReplyMsg_default_instance_;
class RegisterMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterMsg> _instance;
} _RegisterMsg_default_instance_;
class RegisterReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterReplyMsg> _instance;
} _RegisterReplyMsg_default_instance_;
class LaunchMsg_KVDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LaunchMsg_KV> _instance;
} _LaunchMsg_KV_default_instance_;
class LaunchMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LaunchMsg> _instance;
} _LaunchMsg_default_instance_;
class LaunchReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LaunchReplyMsg> _instance;
} _LaunchReplyMsg_default_instance_;
class CompleteMapMsg_KVDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompleteMapMsg_KV> _instance;
} _CompleteMapMsg_KV_default_instance_;
class CompleteMapMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompleteMapMsg> _instance;
} _CompleteMapMsg_default_instance_;
class CompleteReduceMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompleteReduceMsg> _instance;
} _CompleteReduceMsg_default_instance_;
class GetResultMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResultMsg> _instance;
} _GetResultMsg_default_instance_;
class GetResultReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResultReplyMsg> _instance;
} _GetResultReplyMsg_default_instance_;
}  // namespace tmapreduce
static void InitDefaultsscc_info_CompleteMapMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_CompleteMapMsg_default_instance_;
    new (ptr) ::tmapreduce::CompleteMapMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::CompleteMapMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CompleteMapMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CompleteMapMsg_master_5fservice_2eproto}, {
      &scc_info_CompleteMapMsg_KV_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_CompleteMapMsg_KV_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_CompleteMapMsg_KV_default_instance_;
    new (ptr) ::tmapreduce::CompleteMapMsg_KV();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::CompleteMapMsg_KV::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CompleteMapMsg_KV_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CompleteMapMsg_KV_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CompleteReduceMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_CompleteReduceMsg_default_instance_;
    new (ptr) ::tmapreduce::CompleteReduceMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::CompleteReduceMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CompleteReduceMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CompleteReduceMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetResultMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_GetResultMsg_default_instance_;
    new (ptr) ::tmapreduce::GetResultMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::GetResultMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResultMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResultMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetResultReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_GetResultReplyMsg_default_instance_;
    new (ptr) ::tmapreduce::GetResultReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::GetResultReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResultReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResultReplyMsg_master_5fservice_2eproto}, {
      &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_LaunchMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_LaunchMsg_default_instance_;
    new (ptr) ::tmapreduce::LaunchMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::LaunchMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LaunchMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LaunchMsg_master_5fservice_2eproto}, {
      &scc_info_LaunchMsg_KV_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_LaunchMsg_KV_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_LaunchMsg_KV_default_instance_;
    new (ptr) ::tmapreduce::LaunchMsg_KV();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::LaunchMsg_KV::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LaunchMsg_KV_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LaunchMsg_KV_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LaunchReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_LaunchReplyMsg_default_instance_;
    new (ptr) ::tmapreduce::LaunchReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::LaunchReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LaunchReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LaunchReplyMsg_master_5fservice_2eproto}, {
      &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_MasterReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_MasterReplyMsg_default_instance_;
    new (ptr) ::tmapreduce::MasterReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::MasterReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MasterReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MasterReplyMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RegisterMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_RegisterMsg_default_instance_;
    new (ptr) ::tmapreduce::RegisterMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::RegisterMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RegisterReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tmapreduce::_RegisterReplyMsg_default_instance_;
    new (ptr) ::tmapreduce::RegisterReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tmapreduce::RegisterReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterReplyMsg_master_5fservice_2eproto}, {
      &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_master_5fservice_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_master_5fservice_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_master_5fservice_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_master_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::MasterReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::MasterReplyMsg, ok_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::MasterReplyMsg, msg_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::MasterReplyMsg, redirect_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterMsg, name_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterMsg, ep_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterMsg, acceptable_job_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterReplyMsg, reply_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterReplyMsg, worker_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::RegisterReplyMsg, master_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg_KV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg_KV, key_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg_KV, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg, name_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg, type_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg, mapper_num_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg, reducer_num_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg, token_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchMsg, kvs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchReplyMsg, reply_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::LaunchReplyMsg, job_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg_KV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg_KV, key_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg_KV, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg, job_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg, subjob_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg, worker_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg, state_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteMapMsg, map_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteReduceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteReduceMsg, job_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteReduceMsg, subjob_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteReduceMsg, worker_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteReduceMsg, state_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::CompleteReduceMsg, reduce_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::GetResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::GetResultMsg, job_id_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::GetResultMsg, job_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::GetResultReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tmapreduce::GetResultReplyMsg, reply_),
  PROTOBUF_FIELD_OFFSET(::tmapreduce::GetResultReplyMsg, results_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tmapreduce::MasterReplyMsg)},
  { 8, -1, sizeof(::tmapreduce::RegisterMsg)},
  { 16, -1, sizeof(::tmapreduce::RegisterReplyMsg)},
  { 24, -1, sizeof(::tmapreduce::LaunchMsg_KV)},
  { 31, -1, sizeof(::tmapreduce::LaunchMsg)},
  { 42, -1, sizeof(::tmapreduce::LaunchReplyMsg)},
  { 49, -1, sizeof(::tmapreduce::CompleteMapMsg_KV)},
  { 56, -1, sizeof(::tmapreduce::CompleteMapMsg)},
  { 66, -1, sizeof(::tmapreduce::CompleteReduceMsg)},
  { 76, -1, sizeof(::tmapreduce::GetResultMsg)},
  { 83, -1, sizeof(::tmapreduce::GetResultReplyMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_MasterReplyMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_RegisterMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_RegisterReplyMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_LaunchMsg_KV_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_LaunchMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_LaunchReplyMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_CompleteMapMsg_KV_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_CompleteMapMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_CompleteReduceMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_GetResultMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tmapreduce::_GetResultReplyMsg_default_instance_),
};

const char descriptor_table_protodef_master_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024master_service.proto\022\ntmapreduce\032\013stat"
  "e.proto\";\n\016MasterReplyMsg\022\n\n\002ok\030\001 \001(\010\022\013\n"
  "\003msg\030\002 \001(\t\022\020\n\010redirect\030\003 \001(\t\"D\n\013Register"
  "Msg\022\014\n\004name\030\001 \001(\t\022\n\n\002ep\030\002 \001(\t\022\033\n\023accepta"
  "ble_job_type\030\004 \003(\t\"c\n\020RegisterReplyMsg\022)"
  "\n\005reply\030\001 \001(\0132\032.tmapreduce.MasterReplyMs"
  "g\022\021\n\tworker_id\030\002 \001(\r\022\021\n\tmaster_id\030\003 \001(\r\""
  "\250\001\n\tLaunchMsg\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001("
  "\t\022\022\n\nmapper_num\030\003 \001(\r\022\023\n\013reducer_num\030\004 \001"
  "(\r\022\r\n\005token\030\005 \001(\t\022%\n\003kvs\030\006 \003(\0132\030.tmapred"
  "uce.LaunchMsg.KV\032 \n\002KV\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\t\"K\n\016LaunchReplyMsg\022)\n\005reply\030\001 "
  "\001(\0132\032.tmapreduce.MasterReplyMsg\022\016\n\006job_i"
  "d\030\002 \001(\r\"\303\001\n\016CompleteMapMsg\022\016\n\006job_id\030\001 \001"
  "(\r\022\021\n\tsubjob_id\030\002 \001(\r\022\021\n\tworker_id\030\003 \001(\r"
  "\022&\n\005state\030\004 \001(\0162\027.tmapreduce.WorkerState"
  "\0221\n\nmap_result\030\005 \003(\0132\035.tmapreduce.Comple"
  "teMapMsg.KV\032 \n\002KV\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t\"\210\001\n\021CompleteReduceMsg\022\016\n\006job_id\030\001 "
  "\001(\r\022\021\n\tsubjob_id\030\002 \001(\r\022\021\n\tworker_id\030\003 \001("
  "\r\022&\n\005state\030\004 \001(\0162\027.tmapreduce.WorkerStat"
  "e\022\025\n\rreduce_result\030\005 \003(\t\"2\n\014GetResultMsg"
  "\022\016\n\006job_id\030\001 \001(\r\022\022\n\njob_secret\030\002 \001(\004\"O\n\021"
  "GetResultReplyMsg\022)\n\005reply\030\001 \001(\0132\032.tmapr"
  "educe.MasterReplyMsg\022\017\n\007results\030\002 \003(\t2\363\002"
  "\n\rMasterService\022C\n\010Register\022\027.tmapreduce"
  ".RegisterMsg\032\034.tmapreduce.RegisterReplyM"
  "sg\"\000\022=\n\006Launch\022\025.tmapreduce.LaunchMsg\032\032."
  "tmapreduce.LaunchReplyMsg\"\000\022G\n\013CompleteM"
  "ap\022\032.tmapreduce.CompleteMapMsg\032\032.tmapred"
  "uce.MasterReplyMsg\"\000\022M\n\016CompleteReduce\022\035"
  ".tmapreduce.CompleteReduceMsg\032\032.tmapredu"
  "ce.MasterReplyMsg\"\000\022F\n\tGetResult\022\030.tmapr"
  "educe.GetResultMsg\032\035.tmapreduce.GetResul"
  "tReplyMsg\"\000B\003\200\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_master_5fservice_2eproto_deps[1] = {
  &::descriptor_table_state_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_master_5fservice_2eproto_sccs[11] = {
  &scc_info_CompleteMapMsg_master_5fservice_2eproto.base,
  &scc_info_CompleteMapMsg_KV_master_5fservice_2eproto.base,
  &scc_info_CompleteReduceMsg_master_5fservice_2eproto.base,
  &scc_info_GetResultMsg_master_5fservice_2eproto.base,
  &scc_info_GetResultReplyMsg_master_5fservice_2eproto.base,
  &scc_info_LaunchMsg_master_5fservice_2eproto.base,
  &scc_info_LaunchMsg_KV_master_5fservice_2eproto.base,
  &scc_info_LaunchReplyMsg_master_5fservice_2eproto.base,
  &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,
  &scc_info_RegisterMsg_master_5fservice_2eproto.base,
  &scc_info_RegisterReplyMsg_master_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_master_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_master_5fservice_2eproto = {
  false, false, descriptor_table_protodef_master_5fservice_2eproto, "master_service.proto", 1384,
  &descriptor_table_master_5fservice_2eproto_once, descriptor_table_master_5fservice_2eproto_sccs, descriptor_table_master_5fservice_2eproto_deps, 11, 1,
  schemas, file_default_instances, TableStruct_master_5fservice_2eproto::offsets,
  file_level_metadata_master_5fservice_2eproto, 11, file_level_enum_descriptors_master_5fservice_2eproto, file_level_service_descriptors_master_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_master_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_master_5fservice_2eproto)), true);
namespace tmapreduce {

// ===================================================================

void MasterReplyMsg::InitAsDefaultInstance() {
}
class MasterReplyMsg::_Internal {
 public:
};

MasterReplyMsg::MasterReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.MasterReplyMsg)
}
MasterReplyMsg::MasterReplyMsg(const MasterReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect().empty()) {
    redirect_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_redirect(),
      GetArena());
  }
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:tmapreduce.MasterReplyMsg)
}

void MasterReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MasterReplyMsg_master_5fservice_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ok_ = false;
}

MasterReplyMsg::~MasterReplyMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.MasterReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MasterReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MasterReplyMsg::ArenaDtor(void* object) {
  MasterReplyMsg* _this = reinterpret_cast< MasterReplyMsg* >(object);
  (void)_this;
}
void MasterReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MasterReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterReplyMsg& MasterReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MasterReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.MasterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  redirect_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MasterReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.MasterReplyMsg.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string redirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_redirect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.MasterReplyMsg.redirect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MasterReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.MasterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.MasterReplyMsg.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect().data(), static_cast<int>(this->_internal_redirect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.MasterReplyMsg.redirect");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_redirect(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.MasterReplyMsg)
  return target;
}

size_t MasterReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.MasterReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string redirect = 3;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect());
  }

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.MasterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MasterReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.MasterReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.MasterReplyMsg)
    MergeFrom(*source);
  }
}

void MasterReplyMsg::MergeFrom(const MasterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.MasterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.redirect().size() > 0) {
    _internal_set_redirect(from._internal_redirect());
  }
  if (from.ok() != 0) {
    _internal_set_ok(from._internal_ok());
  }
}

void MasterReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.MasterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterReplyMsg::CopyFrom(const MasterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.MasterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterReplyMsg::IsInitialized() const {
  return true;
}

void MasterReplyMsg::InternalSwap(MasterReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  redirect_.Swap(&other->redirect_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ok_, other->ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterMsg::InitAsDefaultInstance() {
}
class RegisterMsg::_Internal {
 public:
};

RegisterMsg::RegisterMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  acceptable_job_type_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.RegisterMsg)
}
RegisterMsg::RegisterMsg(const RegisterMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      acceptable_job_type_(from.acceptable_job_type_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ep_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ep().empty()) {
    ep_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ep(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tmapreduce.RegisterMsg)
}

void RegisterMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterMsg_master_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ep_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterMsg::~RegisterMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.RegisterMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ep_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterMsg::ArenaDtor(void* object) {
  RegisterMsg* _this = reinterpret_cast< RegisterMsg* >(object);
  (void)_this;
}
void RegisterMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterMsg& RegisterMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.RegisterMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acceptable_job_type_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ep_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.RegisterMsg.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ep = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ep();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.RegisterMsg.ep"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string acceptable_job_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_acceptable_job_type();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.RegisterMsg.acceptable_job_type"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.RegisterMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.RegisterMsg.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string ep = 2;
  if (this->ep().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ep().data(), static_cast<int>(this->_internal_ep().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.RegisterMsg.ep");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ep(), target);
  }

  // repeated string acceptable_job_type = 4;
  for (int i = 0, n = this->_internal_acceptable_job_type_size(); i < n; i++) {
    const auto& s = this->_internal_acceptable_job_type(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.RegisterMsg.acceptable_job_type");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.RegisterMsg)
  return target;
}

size_t RegisterMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.RegisterMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string acceptable_job_type = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(acceptable_job_type_.size());
  for (int i = 0, n = acceptable_job_type_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      acceptable_job_type_.Get(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string ep = 2;
  if (this->ep().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ep());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.RegisterMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.RegisterMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.RegisterMsg)
    MergeFrom(*source);
  }
}

void RegisterMsg::MergeFrom(const RegisterMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.RegisterMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acceptable_job_type_.MergeFrom(from.acceptable_job_type_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.ep().size() > 0) {
    _internal_set_ep(from._internal_ep());
  }
}

void RegisterMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.RegisterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterMsg::CopyFrom(const RegisterMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.RegisterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterMsg::IsInitialized() const {
  return true;
}

void RegisterMsg::InternalSwap(RegisterMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  acceptable_job_type_.InternalSwap(&other->acceptable_job_type_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ep_.Swap(&other->ep_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterReplyMsg::InitAsDefaultInstance() {
  ::tmapreduce::_RegisterReplyMsg_default_instance_._instance.get_mutable()->reply_ = const_cast< ::tmapreduce::MasterReplyMsg*>(
      ::tmapreduce::MasterReplyMsg::internal_default_instance());
}
class RegisterReplyMsg::_Internal {
 public:
  static const ::tmapreduce::MasterReplyMsg& reply(const RegisterReplyMsg* msg);
};

const ::tmapreduce::MasterReplyMsg&
RegisterReplyMsg::_Internal::reply(const RegisterReplyMsg* msg) {
  return *msg->reply_;
}
RegisterReplyMsg::RegisterReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.RegisterReplyMsg)
}
RegisterReplyMsg::RegisterReplyMsg(const RegisterReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reply()) {
    reply_ = new ::tmapreduce::MasterReplyMsg(*from.reply_);
  } else {
    reply_ = nullptr;
  }
  ::memcpy(&worker_id_, &from.worker_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&master_id_) -
    reinterpret_cast<char*>(&worker_id_)) + sizeof(master_id_));
  // @@protoc_insertion_point(copy_constructor:tmapreduce.RegisterReplyMsg)
}

void RegisterReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterReplyMsg_master_5fservice_2eproto.base);
  ::memset(&reply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&master_id_) -
      reinterpret_cast<char*>(&reply_)) + sizeof(master_id_));
}

RegisterReplyMsg::~RegisterReplyMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.RegisterReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete reply_;
}

void RegisterReplyMsg::ArenaDtor(void* object) {
  RegisterReplyMsg* _this = reinterpret_cast< RegisterReplyMsg* >(object);
  (void)_this;
}
void RegisterReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterReplyMsg& RegisterReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.RegisterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && reply_ != nullptr) {
    delete reply_;
  }
  reply_ = nullptr;
  ::memset(&worker_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&master_id_) -
      reinterpret_cast<char*>(&worker_id_)) + sizeof(master_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tmapreduce.MasterReplyMsg reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 worker_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 master_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          master_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.RegisterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tmapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reply(this), target, stream);
  }

  // uint32 worker_id = 2;
  if (this->worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_worker_id(), target);
  }

  // uint32 master_id = 3;
  if (this->master_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_master_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.RegisterReplyMsg)
  return target;
}

size_t RegisterReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.RegisterReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tmapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_);
  }

  // uint32 worker_id = 2;
  if (this->worker_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_worker_id());
  }

  // uint32 master_id = 3;
  if (this->master_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_master_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.RegisterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.RegisterReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.RegisterReplyMsg)
    MergeFrom(*source);
  }
}

void RegisterReplyMsg::MergeFrom(const RegisterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.RegisterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reply()) {
    _internal_mutable_reply()->::tmapreduce::MasterReplyMsg::MergeFrom(from._internal_reply());
  }
  if (from.worker_id() != 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.master_id() != 0) {
    _internal_set_master_id(from._internal_master_id());
  }
}

void RegisterReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.RegisterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterReplyMsg::CopyFrom(const RegisterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.RegisterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterReplyMsg::IsInitialized() const {
  return true;
}

void RegisterReplyMsg::InternalSwap(RegisterReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterReplyMsg, master_id_)
      + sizeof(RegisterReplyMsg::master_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterReplyMsg, reply_)>(
          reinterpret_cast<char*>(&reply_),
          reinterpret_cast<char*>(&other->reply_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LaunchMsg_KV::InitAsDefaultInstance() {
}
class LaunchMsg_KV::_Internal {
 public:
};

LaunchMsg_KV::LaunchMsg_KV(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.LaunchMsg.KV)
}
LaunchMsg_KV::LaunchMsg_KV(const LaunchMsg_KV& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tmapreduce.LaunchMsg.KV)
}

void LaunchMsg_KV::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LaunchMsg_KV_master_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LaunchMsg_KV::~LaunchMsg_KV() {
  // @@protoc_insertion_point(destructor:tmapreduce.LaunchMsg.KV)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LaunchMsg_KV::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LaunchMsg_KV::ArenaDtor(void* object) {
  LaunchMsg_KV* _this = reinterpret_cast< LaunchMsg_KV* >(object);
  (void)_this;
}
void LaunchMsg_KV::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LaunchMsg_KV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchMsg_KV& LaunchMsg_KV::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LaunchMsg_KV_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LaunchMsg_KV::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.LaunchMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LaunchMsg_KV::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.LaunchMsg.KV.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.LaunchMsg.KV.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LaunchMsg_KV::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.LaunchMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.LaunchMsg.KV.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.LaunchMsg.KV.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.LaunchMsg.KV)
  return target;
}

size_t LaunchMsg_KV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.LaunchMsg.KV)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchMsg_KV::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.LaunchMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchMsg_KV* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LaunchMsg_KV>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.LaunchMsg.KV)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.LaunchMsg.KV)
    MergeFrom(*source);
  }
}

void LaunchMsg_KV::MergeFrom(const LaunchMsg_KV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.LaunchMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void LaunchMsg_KV::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.LaunchMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchMsg_KV::CopyFrom(const LaunchMsg_KV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.LaunchMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchMsg_KV::IsInitialized() const {
  return true;
}

void LaunchMsg_KV::InternalSwap(LaunchMsg_KV* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LaunchMsg_KV::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LaunchMsg::InitAsDefaultInstance() {
}
class LaunchMsg::_Internal {
 public:
};

LaunchMsg::LaunchMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  kvs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.LaunchMsg)
}
LaunchMsg::LaunchMsg(const LaunchMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      kvs_(from.kvs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  ::memcpy(&mapper_num_, &from.mapper_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&reducer_num_) -
    reinterpret_cast<char*>(&mapper_num_)) + sizeof(reducer_num_));
  // @@protoc_insertion_point(copy_constructor:tmapreduce.LaunchMsg)
}

void LaunchMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LaunchMsg_master_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&mapper_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reducer_num_) -
      reinterpret_cast<char*>(&mapper_num_)) + sizeof(reducer_num_));
}

LaunchMsg::~LaunchMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.LaunchMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LaunchMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LaunchMsg::ArenaDtor(void* object) {
  LaunchMsg* _this = reinterpret_cast< LaunchMsg* >(object);
  (void)_this;
}
void LaunchMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LaunchMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchMsg& LaunchMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LaunchMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LaunchMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.LaunchMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kvs_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&mapper_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reducer_num_) -
      reinterpret_cast<char*>(&mapper_num_)) + sizeof(reducer_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LaunchMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.LaunchMsg.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.LaunchMsg.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 mapper_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          mapper_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 reducer_num = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          reducer_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string token = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.LaunchMsg.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .tmapreduce.LaunchMsg.KV kvs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_kvs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LaunchMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.LaunchMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.LaunchMsg.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.LaunchMsg.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // uint32 mapper_num = 3;
  if (this->mapper_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mapper_num(), target);
  }

  // uint32 reducer_num = 4;
  if (this->reducer_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_reducer_num(), target);
  }

  // string token = 5;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.LaunchMsg.token");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_token(), target);
  }

  // repeated .tmapreduce.LaunchMsg.KV kvs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_kvs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_kvs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.LaunchMsg)
  return target;
}

size_t LaunchMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.LaunchMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tmapreduce.LaunchMsg.KV kvs = 6;
  total_size += 1UL * this->_internal_kvs_size();
  for (const auto& msg : this->kvs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string token = 5;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // uint32 mapper_num = 3;
  if (this->mapper_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mapper_num());
  }

  // uint32 reducer_num = 4;
  if (this->reducer_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reducer_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.LaunchMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LaunchMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.LaunchMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.LaunchMsg)
    MergeFrom(*source);
  }
}

void LaunchMsg::MergeFrom(const LaunchMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.LaunchMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kvs_.MergeFrom(from.kvs_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.mapper_num() != 0) {
    _internal_set_mapper_num(from._internal_mapper_num());
  }
  if (from.reducer_num() != 0) {
    _internal_set_reducer_num(from._internal_reducer_num());
  }
}

void LaunchMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.LaunchMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchMsg::CopyFrom(const LaunchMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.LaunchMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchMsg::IsInitialized() const {
  return true;
}

void LaunchMsg::InternalSwap(LaunchMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  kvs_.InternalSwap(&other->kvs_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaunchMsg, reducer_num_)
      + sizeof(LaunchMsg::reducer_num_)
      - PROTOBUF_FIELD_OFFSET(LaunchMsg, mapper_num_)>(
          reinterpret_cast<char*>(&mapper_num_),
          reinterpret_cast<char*>(&other->mapper_num_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LaunchMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LaunchReplyMsg::InitAsDefaultInstance() {
  ::tmapreduce::_LaunchReplyMsg_default_instance_._instance.get_mutable()->reply_ = const_cast< ::tmapreduce::MasterReplyMsg*>(
      ::tmapreduce::MasterReplyMsg::internal_default_instance());
}
class LaunchReplyMsg::_Internal {
 public:
  static const ::tmapreduce::MasterReplyMsg& reply(const LaunchReplyMsg* msg);
};

const ::tmapreduce::MasterReplyMsg&
LaunchReplyMsg::_Internal::reply(const LaunchReplyMsg* msg) {
  return *msg->reply_;
}
LaunchReplyMsg::LaunchReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.LaunchReplyMsg)
}
LaunchReplyMsg::LaunchReplyMsg(const LaunchReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reply()) {
    reply_ = new ::tmapreduce::MasterReplyMsg(*from.reply_);
  } else {
    reply_ = nullptr;
  }
  job_id_ = from.job_id_;
  // @@protoc_insertion_point(copy_constructor:tmapreduce.LaunchReplyMsg)
}

void LaunchReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LaunchReplyMsg_master_5fservice_2eproto.base);
  ::memset(&reply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_id_) -
      reinterpret_cast<char*>(&reply_)) + sizeof(job_id_));
}

LaunchReplyMsg::~LaunchReplyMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.LaunchReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LaunchReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete reply_;
}

void LaunchReplyMsg::ArenaDtor(void* object) {
  LaunchReplyMsg* _this = reinterpret_cast< LaunchReplyMsg* >(object);
  (void)_this;
}
void LaunchReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LaunchReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchReplyMsg& LaunchReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LaunchReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LaunchReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.LaunchReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && reply_ != nullptr) {
    delete reply_;
  }
  reply_ = nullptr;
  job_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LaunchReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tmapreduce.MasterReplyMsg reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 job_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LaunchReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.LaunchReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tmapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reply(this), target, stream);
  }

  // uint32 job_id = 2;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_job_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.LaunchReplyMsg)
  return target;
}

size_t LaunchReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.LaunchReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tmapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_);
  }

  // uint32 job_id = 2;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.LaunchReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LaunchReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.LaunchReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.LaunchReplyMsg)
    MergeFrom(*source);
  }
}

void LaunchReplyMsg::MergeFrom(const LaunchReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.LaunchReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reply()) {
    _internal_mutable_reply()->::tmapreduce::MasterReplyMsg::MergeFrom(from._internal_reply());
  }
  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
}

void LaunchReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.LaunchReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchReplyMsg::CopyFrom(const LaunchReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.LaunchReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchReplyMsg::IsInitialized() const {
  return true;
}

void LaunchReplyMsg::InternalSwap(LaunchReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaunchReplyMsg, job_id_)
      + sizeof(LaunchReplyMsg::job_id_)
      - PROTOBUF_FIELD_OFFSET(LaunchReplyMsg, reply_)>(
          reinterpret_cast<char*>(&reply_),
          reinterpret_cast<char*>(&other->reply_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LaunchReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CompleteMapMsg_KV::InitAsDefaultInstance() {
}
class CompleteMapMsg_KV::_Internal {
 public:
};

CompleteMapMsg_KV::CompleteMapMsg_KV(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.CompleteMapMsg.KV)
}
CompleteMapMsg_KV::CompleteMapMsg_KV(const CompleteMapMsg_KV& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tmapreduce.CompleteMapMsg.KV)
}

void CompleteMapMsg_KV::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompleteMapMsg_KV_master_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CompleteMapMsg_KV::~CompleteMapMsg_KV() {
  // @@protoc_insertion_point(destructor:tmapreduce.CompleteMapMsg.KV)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CompleteMapMsg_KV::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CompleteMapMsg_KV::ArenaDtor(void* object) {
  CompleteMapMsg_KV* _this = reinterpret_cast< CompleteMapMsg_KV* >(object);
  (void)_this;
}
void CompleteMapMsg_KV::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompleteMapMsg_KV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompleteMapMsg_KV& CompleteMapMsg_KV::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompleteMapMsg_KV_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CompleteMapMsg_KV::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.CompleteMapMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompleteMapMsg_KV::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.CompleteMapMsg.KV.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.CompleteMapMsg.KV.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CompleteMapMsg_KV::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.CompleteMapMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.CompleteMapMsg.KV.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.CompleteMapMsg.KV.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.CompleteMapMsg.KV)
  return target;
}

size_t CompleteMapMsg_KV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.CompleteMapMsg.KV)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteMapMsg_KV::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.CompleteMapMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteMapMsg_KV* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompleteMapMsg_KV>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.CompleteMapMsg.KV)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.CompleteMapMsg.KV)
    MergeFrom(*source);
  }
}

void CompleteMapMsg_KV::MergeFrom(const CompleteMapMsg_KV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.CompleteMapMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void CompleteMapMsg_KV::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.CompleteMapMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteMapMsg_KV::CopyFrom(const CompleteMapMsg_KV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.CompleteMapMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteMapMsg_KV::IsInitialized() const {
  return true;
}

void CompleteMapMsg_KV::InternalSwap(CompleteMapMsg_KV* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CompleteMapMsg_KV::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CompleteMapMsg::InitAsDefaultInstance() {
}
class CompleteMapMsg::_Internal {
 public:
};

CompleteMapMsg::CompleteMapMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  map_result_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.CompleteMapMsg)
}
CompleteMapMsg::CompleteMapMsg(const CompleteMapMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      map_result_(from.map_result_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:tmapreduce.CompleteMapMsg)
}

void CompleteMapMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompleteMapMsg_master_5fservice_2eproto.base);
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
}

CompleteMapMsg::~CompleteMapMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.CompleteMapMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CompleteMapMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CompleteMapMsg::ArenaDtor(void* object) {
  CompleteMapMsg* _this = reinterpret_cast< CompleteMapMsg* >(object);
  (void)_this;
}
void CompleteMapMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompleteMapMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompleteMapMsg& CompleteMapMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompleteMapMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CompleteMapMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.CompleteMapMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_result_.Clear();
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompleteMapMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 job_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 subjob_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          subjob_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 worker_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tmapreduce.WorkerState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::tmapreduce::WorkerState>(val));
        } else goto handle_unusual;
        continue;
      // repeated .tmapreduce.CompleteMapMsg.KV map_result = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_map_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CompleteMapMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.CompleteMapMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_job_id(), target);
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_subjob_id(), target);
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_worker_id(), target);
  }

  // .tmapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // repeated .tmapreduce.CompleteMapMsg.KV map_result = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_map_result_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_map_result(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.CompleteMapMsg)
  return target;
}

size_t CompleteMapMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.CompleteMapMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tmapreduce.CompleteMapMsg.KV map_result = 5;
  total_size += 1UL * this->_internal_map_result_size();
  for (const auto& msg : this->map_result_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subjob_id());
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_worker_id());
  }

  // .tmapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteMapMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.CompleteMapMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteMapMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompleteMapMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.CompleteMapMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.CompleteMapMsg)
    MergeFrom(*source);
  }
}

void CompleteMapMsg::MergeFrom(const CompleteMapMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.CompleteMapMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_result_.MergeFrom(from.map_result_);
  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
  if (from.subjob_id() != 0) {
    _internal_set_subjob_id(from._internal_subjob_id());
  }
  if (from.worker_id() != 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void CompleteMapMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.CompleteMapMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteMapMsg::CopyFrom(const CompleteMapMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.CompleteMapMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteMapMsg::IsInitialized() const {
  return true;
}

void CompleteMapMsg::InternalSwap(CompleteMapMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  map_result_.InternalSwap(&other->map_result_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompleteMapMsg, state_)
      + sizeof(CompleteMapMsg::state_)
      - PROTOBUF_FIELD_OFFSET(CompleteMapMsg, job_id_)>(
          reinterpret_cast<char*>(&job_id_),
          reinterpret_cast<char*>(&other->job_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CompleteMapMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CompleteReduceMsg::InitAsDefaultInstance() {
}
class CompleteReduceMsg::_Internal {
 public:
};

CompleteReduceMsg::CompleteReduceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reduce_result_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.CompleteReduceMsg)
}
CompleteReduceMsg::CompleteReduceMsg(const CompleteReduceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      reduce_result_(from.reduce_result_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:tmapreduce.CompleteReduceMsg)
}

void CompleteReduceMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompleteReduceMsg_master_5fservice_2eproto.base);
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
}

CompleteReduceMsg::~CompleteReduceMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.CompleteReduceMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CompleteReduceMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CompleteReduceMsg::ArenaDtor(void* object) {
  CompleteReduceMsg* _this = reinterpret_cast< CompleteReduceMsg* >(object);
  (void)_this;
}
void CompleteReduceMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompleteReduceMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompleteReduceMsg& CompleteReduceMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompleteReduceMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CompleteReduceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.CompleteReduceMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reduce_result_.Clear();
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompleteReduceMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 job_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 subjob_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          subjob_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 worker_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tmapreduce.WorkerState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::tmapreduce::WorkerState>(val));
        } else goto handle_unusual;
        continue;
      // repeated string reduce_result = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_reduce_result();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.CompleteReduceMsg.reduce_result"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CompleteReduceMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.CompleteReduceMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_job_id(), target);
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_subjob_id(), target);
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_worker_id(), target);
  }

  // .tmapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // repeated string reduce_result = 5;
  for (int i = 0, n = this->_internal_reduce_result_size(); i < n; i++) {
    const auto& s = this->_internal_reduce_result(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.CompleteReduceMsg.reduce_result");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.CompleteReduceMsg)
  return target;
}

size_t CompleteReduceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.CompleteReduceMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string reduce_result = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(reduce_result_.size());
  for (int i = 0, n = reduce_result_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      reduce_result_.Get(i));
  }

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subjob_id());
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_worker_id());
  }

  // .tmapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteReduceMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.CompleteReduceMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteReduceMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompleteReduceMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.CompleteReduceMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.CompleteReduceMsg)
    MergeFrom(*source);
  }
}

void CompleteReduceMsg::MergeFrom(const CompleteReduceMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.CompleteReduceMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reduce_result_.MergeFrom(from.reduce_result_);
  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
  if (from.subjob_id() != 0) {
    _internal_set_subjob_id(from._internal_subjob_id());
  }
  if (from.worker_id() != 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void CompleteReduceMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.CompleteReduceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteReduceMsg::CopyFrom(const CompleteReduceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.CompleteReduceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteReduceMsg::IsInitialized() const {
  return true;
}

void CompleteReduceMsg::InternalSwap(CompleteReduceMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reduce_result_.InternalSwap(&other->reduce_result_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompleteReduceMsg, state_)
      + sizeof(CompleteReduceMsg::state_)
      - PROTOBUF_FIELD_OFFSET(CompleteReduceMsg, job_id_)>(
          reinterpret_cast<char*>(&job_id_),
          reinterpret_cast<char*>(&other->job_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CompleteReduceMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResultMsg::InitAsDefaultInstance() {
}
class GetResultMsg::_Internal {
 public:
};

GetResultMsg::GetResultMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.GetResultMsg)
}
GetResultMsg::GetResultMsg(const GetResultMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&job_secret_, &from.job_secret_,
    static_cast<size_t>(reinterpret_cast<char*>(&job_id_) -
    reinterpret_cast<char*>(&job_secret_)) + sizeof(job_id_));
  // @@protoc_insertion_point(copy_constructor:tmapreduce.GetResultMsg)
}

void GetResultMsg::SharedCtor() {
  ::memset(&job_secret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_id_) -
      reinterpret_cast<char*>(&job_secret_)) + sizeof(job_id_));
}

GetResultMsg::~GetResultMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.GetResultMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResultMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetResultMsg::ArenaDtor(void* object) {
  GetResultMsg* _this = reinterpret_cast< GetResultMsg* >(object);
  (void)_this;
}
void GetResultMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResultMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResultMsg& GetResultMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResultMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.GetResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&job_secret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_id_) -
      reinterpret_cast<char*>(&job_secret_)) + sizeof(job_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 job_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 job_secret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          job_secret_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResultMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.GetResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_job_id(), target);
  }

  // uint64 job_secret = 2;
  if (this->job_secret() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_job_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.GetResultMsg)
  return target;
}

size_t GetResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.GetResultMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 job_secret = 2;
  if (this->job_secret() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_job_secret());
  }

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResultMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.GetResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResultMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResultMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.GetResultMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.GetResultMsg)
    MergeFrom(*source);
  }
}

void GetResultMsg::MergeFrom(const GetResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.GetResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_secret() != 0) {
    _internal_set_job_secret(from._internal_job_secret());
  }
  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
}

void GetResultMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.GetResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResultMsg::CopyFrom(const GetResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.GetResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultMsg::IsInitialized() const {
  return true;
}

void GetResultMsg::InternalSwap(GetResultMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResultMsg, job_id_)
      + sizeof(GetResultMsg::job_id_)
      - PROTOBUF_FIELD_OFFSET(GetResultMsg, job_secret_)>(
          reinterpret_cast<char*>(&job_secret_),
          reinterpret_cast<char*>(&other->job_secret_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResultReplyMsg::InitAsDefaultInstance() {
  ::tmapreduce::_GetResultReplyMsg_default_instance_._instance.get_mutable()->reply_ = const_cast< ::tmapreduce::MasterReplyMsg*>(
      ::tmapreduce::MasterReplyMsg::internal_default_instance());
}
class GetResultReplyMsg::_Internal {
 public:
  static const ::tmapreduce::MasterReplyMsg& reply(const GetResultReplyMsg* msg);
};

const ::tmapreduce::MasterReplyMsg&
GetResultReplyMsg::_Internal::reply(const GetResultReplyMsg* msg) {
  return *msg->reply_;
}
GetResultReplyMsg::GetResultReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tmapreduce.GetResultReplyMsg)
}
GetResultReplyMsg::GetResultReplyMsg(const GetResultReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reply()) {
    reply_ = new ::tmapreduce::MasterReplyMsg(*from.reply_);
  } else {
    reply_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tmapreduce.GetResultReplyMsg)
}

void GetResultReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResultReplyMsg_master_5fservice_2eproto.base);
  reply_ = nullptr;
}

GetResultReplyMsg::~GetResultReplyMsg() {
  // @@protoc_insertion_point(destructor:tmapreduce.GetResultReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResultReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete reply_;
}

void GetResultReplyMsg::ArenaDtor(void* object) {
  GetResultReplyMsg* _this = reinterpret_cast< GetResultReplyMsg* >(object);
  (void)_this;
}
void GetResultReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResultReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResultReplyMsg& GetResultReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResultReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetResultReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tmapreduce.GetResultReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArena() == nullptr && reply_ != nullptr) {
    delete reply_;
  }
  reply_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tmapreduce.MasterReplyMsg reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_results();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tmapreduce.GetResultReplyMsg.results"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResultReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tmapreduce.GetResultReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tmapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reply(this), target, stream);
  }

  // repeated string results = 2;
  for (int i = 0, n = this->_internal_results_size(); i < n; i++) {
    const auto& s = this->_internal_results(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tmapreduce.GetResultReplyMsg.results");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tmapreduce.GetResultReplyMsg)
  return target;
}

size_t GetResultReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tmapreduce.GetResultReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string results = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(results_.size());
  for (int i = 0, n = results_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      results_.Get(i));
  }

  // .tmapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResultReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tmapreduce.GetResultReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResultReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResultReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tmapreduce.GetResultReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tmapreduce.GetResultReplyMsg)
    MergeFrom(*source);
  }
}

void GetResultReplyMsg::MergeFrom(const GetResultReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tmapreduce.GetResultReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_reply()) {
    _internal_mutable_reply()->::tmapreduce::MasterReplyMsg::MergeFrom(from._internal_reply());
  }
}

void GetResultReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tmapreduce.GetResultReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResultReplyMsg::CopyFrom(const GetResultReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tmapreduce.GetResultReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultReplyMsg::IsInitialized() const {
  return true;
}

void GetResultReplyMsg::InternalSwap(GetResultReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
  swap(reply_, other->reply_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MasterService::~MasterService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* MasterService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_master_5fservice_2eproto);
  return file_level_service_descriptors_master_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* MasterService::GetDescriptor() {
  return descriptor();
}

void MasterService::Register(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::tmapreduce::RegisterMsg*,
                         ::tmapreduce::RegisterReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Register() not implemented.");
  done->Run();
}

void MasterService::Launch(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::tmapreduce::LaunchMsg*,
                         ::tmapreduce::LaunchReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Launch() not implemented.");
  done->Run();
}

void MasterService::CompleteMap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::tmapreduce::CompleteMapMsg*,
                         ::tmapreduce::MasterReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CompleteMap() not implemented.");
  done->Run();
}

void MasterService::CompleteReduce(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::tmapreduce::CompleteReduceMsg*,
                         ::tmapreduce::MasterReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CompleteReduce() not implemented.");
  done->Run();
}

void MasterService::GetResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::tmapreduce::GetResultMsg*,
                         ::tmapreduce::GetResultReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetResult() not implemented.");
  done->Run();
}

void MasterService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_master_5fservice_2eproto[0]);
  switch(method->index()) {
    case 0:
      Register(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::tmapreduce::RegisterMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::tmapreduce::RegisterReplyMsg*>(
                 response),
             done);
      break;
    case 1:
      Launch(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::tmapreduce::LaunchMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::tmapreduce::LaunchReplyMsg*>(
                 response),
             done);
      break;
    case 2:
      CompleteMap(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::tmapreduce::CompleteMapMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::tmapreduce::MasterReplyMsg*>(
                 response),
             done);
      break;
    case 3:
      CompleteReduce(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::tmapreduce::CompleteReduceMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::tmapreduce::MasterReplyMsg*>(
                 response),
             done);
      break;
    case 4:
      GetResult(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::tmapreduce::GetResultMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::tmapreduce::GetResultReplyMsg*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& MasterService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::tmapreduce::RegisterMsg::default_instance();
    case 1:
      return ::tmapreduce::LaunchMsg::default_instance();
    case 2:
      return ::tmapreduce::CompleteMapMsg::default_instance();
    case 3:
      return ::tmapreduce::CompleteReduceMsg::default_instance();
    case 4:
      return ::tmapreduce::GetResultMsg::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& MasterService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::tmapreduce::RegisterReplyMsg::default_instance();
    case 1:
      return ::tmapreduce::LaunchReplyMsg::default_instance();
    case 2:
      return ::tmapreduce::MasterReplyMsg::default_instance();
    case 3:
      return ::tmapreduce::MasterReplyMsg::default_instance();
    case 4:
      return ::tmapreduce::GetResultReplyMsg::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MasterService_Stub::MasterService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MasterService_Stub::MasterService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
MasterService_Stub::~MasterService_Stub() {
  if (owns_channel_) delete channel_;
}

void MasterService_Stub::Register(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::tmapreduce::RegisterMsg* request,
                              ::tmapreduce::RegisterReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void MasterService_Stub::Launch(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::tmapreduce::LaunchMsg* request,
                              ::tmapreduce::LaunchReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void MasterService_Stub::CompleteMap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::tmapreduce::CompleteMapMsg* request,
                              ::tmapreduce::MasterReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void MasterService_Stub::CompleteReduce(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::tmapreduce::CompleteReduceMsg* request,
                              ::tmapreduce::MasterReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void MasterService_Stub::GetResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::tmapreduce::GetResultMsg* request,
                              ::tmapreduce::GetResultReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tmapreduce
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tmapreduce::MasterReplyMsg* Arena::CreateMaybeMessage< ::tmapreduce::MasterReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::MasterReplyMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::RegisterMsg* Arena::CreateMaybeMessage< ::tmapreduce::RegisterMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::RegisterMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::RegisterReplyMsg* Arena::CreateMaybeMessage< ::tmapreduce::RegisterReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::RegisterReplyMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::LaunchMsg_KV* Arena::CreateMaybeMessage< ::tmapreduce::LaunchMsg_KV >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::LaunchMsg_KV >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::LaunchMsg* Arena::CreateMaybeMessage< ::tmapreduce::LaunchMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::LaunchMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::LaunchReplyMsg* Arena::CreateMaybeMessage< ::tmapreduce::LaunchReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::LaunchReplyMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::CompleteMapMsg_KV* Arena::CreateMaybeMessage< ::tmapreduce::CompleteMapMsg_KV >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::CompleteMapMsg_KV >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::CompleteMapMsg* Arena::CreateMaybeMessage< ::tmapreduce::CompleteMapMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::CompleteMapMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::CompleteReduceMsg* Arena::CreateMaybeMessage< ::tmapreduce::CompleteReduceMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::CompleteReduceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::GetResultMsg* Arena::CreateMaybeMessage< ::tmapreduce::GetResultMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::GetResultMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::tmapreduce::GetResultReplyMsg* Arena::CreateMaybeMessage< ::tmapreduce::GetResultReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tmapreduce::GetResultReplyMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
