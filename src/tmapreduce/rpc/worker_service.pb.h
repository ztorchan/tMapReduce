// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_worker_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_worker_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
#include "state.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_worker_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_worker_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_worker_5fservice_2eproto;
namespace mapreduce {
class MapJobMsg;
class MapJobMsgDefaultTypeInternal;
extern MapJobMsgDefaultTypeInternal _MapJobMsg_default_instance_;
class MapJobMsg_MapKV;
class MapJobMsg_MapKVDefaultTypeInternal;
extern MapJobMsg_MapKVDefaultTypeInternal _MapJobMsg_MapKV_default_instance_;
class ReduceJobMsg;
class ReduceJobMsgDefaultTypeInternal;
extern ReduceJobMsgDefaultTypeInternal _ReduceJobMsg_default_instance_;
class ReduceJobMsg_ReduceKV;
class ReduceJobMsg_ReduceKVDefaultTypeInternal;
extern ReduceJobMsg_ReduceKVDefaultTypeInternal _ReduceJobMsg_ReduceKV_default_instance_;
class WorkerReplyMsg;
class WorkerReplyMsgDefaultTypeInternal;
extern WorkerReplyMsgDefaultTypeInternal _WorkerReplyMsg_default_instance_;
}  // namespace mapreduce
PROTOBUF_NAMESPACE_OPEN
template<> ::mapreduce::MapJobMsg* Arena::CreateMaybeMessage<::mapreduce::MapJobMsg>(Arena*);
template<> ::mapreduce::MapJobMsg_MapKV* Arena::CreateMaybeMessage<::mapreduce::MapJobMsg_MapKV>(Arena*);
template<> ::mapreduce::ReduceJobMsg* Arena::CreateMaybeMessage<::mapreduce::ReduceJobMsg>(Arena*);
template<> ::mapreduce::ReduceJobMsg_ReduceKV* Arena::CreateMaybeMessage<::mapreduce::ReduceJobMsg_ReduceKV>(Arena*);
template<> ::mapreduce::WorkerReplyMsg* Arena::CreateMaybeMessage<::mapreduce::WorkerReplyMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mapreduce {

// ===================================================================

class WorkerReplyMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mapreduce.WorkerReplyMsg) */ {
 public:
  inline WorkerReplyMsg() : WorkerReplyMsg(nullptr) {};
  virtual ~WorkerReplyMsg();

  WorkerReplyMsg(const WorkerReplyMsg& from);
  WorkerReplyMsg(WorkerReplyMsg&& from) noexcept
    : WorkerReplyMsg() {
    *this = ::std::move(from);
  }

  inline WorkerReplyMsg& operator=(const WorkerReplyMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkerReplyMsg& operator=(WorkerReplyMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WorkerReplyMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkerReplyMsg* internal_default_instance() {
    return reinterpret_cast<const WorkerReplyMsg*>(
               &_WorkerReplyMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WorkerReplyMsg& a, WorkerReplyMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkerReplyMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkerReplyMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WorkerReplyMsg* New() const final {
    return CreateMaybeMessage<WorkerReplyMsg>(nullptr);
  }

  WorkerReplyMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WorkerReplyMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WorkerReplyMsg& from);
  void MergeFrom(const WorkerReplyMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkerReplyMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mapreduce.WorkerReplyMsg";
  }
  protected:
  explicit WorkerReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_worker_5fservice_2eproto);
    return ::descriptor_table_worker_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kOkFieldNumber = 1,
    kStateFieldNumber = 3,
  };
  // string msg = 2;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_msg();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_msg(
      std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // bool ok = 1;
  void clear_ok();
  bool ok() const;
  void set_ok(bool value);
  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);
  public:

  // .mapreduce.WorkerState state = 3;
  void clear_state();
  ::mapreduce::WorkerState state() const;
  void set_state(::mapreduce::WorkerState value);
  private:
  ::mapreduce::WorkerState _internal_state() const;
  void _internal_set_state(::mapreduce::WorkerState value);
  public:

  // @@protoc_insertion_point(class_scope:mapreduce.WorkerReplyMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  bool ok_;
  int state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_worker_5fservice_2eproto;
};
// -------------------------------------------------------------------

class MapJobMsg_MapKV PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mapreduce.MapJobMsg.MapKV) */ {
 public:
  inline MapJobMsg_MapKV() : MapJobMsg_MapKV(nullptr) {};
  virtual ~MapJobMsg_MapKV();

  MapJobMsg_MapKV(const MapJobMsg_MapKV& from);
  MapJobMsg_MapKV(MapJobMsg_MapKV&& from) noexcept
    : MapJobMsg_MapKV() {
    *this = ::std::move(from);
  }

  inline MapJobMsg_MapKV& operator=(const MapJobMsg_MapKV& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapJobMsg_MapKV& operator=(MapJobMsg_MapKV&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapJobMsg_MapKV& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapJobMsg_MapKV* internal_default_instance() {
    return reinterpret_cast<const MapJobMsg_MapKV*>(
               &_MapJobMsg_MapKV_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MapJobMsg_MapKV& a, MapJobMsg_MapKV& b) {
    a.Swap(&b);
  }
  inline void Swap(MapJobMsg_MapKV* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapJobMsg_MapKV* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapJobMsg_MapKV* New() const final {
    return CreateMaybeMessage<MapJobMsg_MapKV>(nullptr);
  }

  MapJobMsg_MapKV* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapJobMsg_MapKV>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapJobMsg_MapKV& from);
  void MergeFrom(const MapJobMsg_MapKV& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapJobMsg_MapKV* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mapreduce.MapJobMsg.MapKV";
  }
  protected:
  explicit MapJobMsg_MapKV(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_worker_5fservice_2eproto);
    return ::descriptor_table_worker_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_key();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_key(
      std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // string value = 2;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_value();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_value(
      std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:mapreduce.MapJobMsg.MapKV)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_worker_5fservice_2eproto;
};
// -------------------------------------------------------------------

class MapJobMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mapreduce.MapJobMsg) */ {
 public:
  inline MapJobMsg() : MapJobMsg(nullptr) {};
  virtual ~MapJobMsg();

  MapJobMsg(const MapJobMsg& from);
  MapJobMsg(MapJobMsg&& from) noexcept
    : MapJobMsg() {
    *this = ::std::move(from);
  }

  inline MapJobMsg& operator=(const MapJobMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapJobMsg& operator=(MapJobMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapJobMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapJobMsg* internal_default_instance() {
    return reinterpret_cast<const MapJobMsg*>(
               &_MapJobMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MapJobMsg& a, MapJobMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(MapJobMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapJobMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapJobMsg* New() const final {
    return CreateMaybeMessage<MapJobMsg>(nullptr);
  }

  MapJobMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapJobMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapJobMsg& from);
  void MergeFrom(const MapJobMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapJobMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mapreduce.MapJobMsg";
  }
  protected:
  explicit MapJobMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_worker_5fservice_2eproto);
    return ::descriptor_table_worker_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MapJobMsg_MapKV MapKV;

  // accessors -------------------------------------------------------

  enum : int {
    kMapKvsFieldNumber = 5,
    kNameFieldNumber = 3,
    kTypeFieldNumber = 4,
    kJobIdFieldNumber = 1,
    kSubjobIdFieldNumber = 2,
  };
  // repeated .mapreduce.MapJobMsg.MapKV map_kvs = 5;
  int map_kvs_size() const;
  private:
  int _internal_map_kvs_size() const;
  public:
  void clear_map_kvs();
  ::mapreduce::MapJobMsg_MapKV* mutable_map_kvs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::MapJobMsg_MapKV >*
      mutable_map_kvs();
  private:
  const ::mapreduce::MapJobMsg_MapKV& _internal_map_kvs(int index) const;
  ::mapreduce::MapJobMsg_MapKV* _internal_add_map_kvs();
  public:
  const ::mapreduce::MapJobMsg_MapKV& map_kvs(int index) const;
  ::mapreduce::MapJobMsg_MapKV* add_map_kvs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::MapJobMsg_MapKV >&
      map_kvs() const;

  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string type = 4;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_type();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_type(
      std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // uint32 job_id = 1;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_job_id() const;
  void _internal_set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 subjob_id = 2;
  void clear_subjob_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 subjob_id() const;
  void set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subjob_id() const;
  void _internal_set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mapreduce.MapJobMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::MapJobMsg_MapKV > map_kvs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 job_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subjob_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_worker_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ReduceJobMsg_ReduceKV PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mapreduce.ReduceJobMsg.ReduceKV) */ {
 public:
  inline ReduceJobMsg_ReduceKV() : ReduceJobMsg_ReduceKV(nullptr) {};
  virtual ~ReduceJobMsg_ReduceKV();

  ReduceJobMsg_ReduceKV(const ReduceJobMsg_ReduceKV& from);
  ReduceJobMsg_ReduceKV(ReduceJobMsg_ReduceKV&& from) noexcept
    : ReduceJobMsg_ReduceKV() {
    *this = ::std::move(from);
  }

  inline ReduceJobMsg_ReduceKV& operator=(const ReduceJobMsg_ReduceKV& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReduceJobMsg_ReduceKV& operator=(ReduceJobMsg_ReduceKV&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReduceJobMsg_ReduceKV& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReduceJobMsg_ReduceKV* internal_default_instance() {
    return reinterpret_cast<const ReduceJobMsg_ReduceKV*>(
               &_ReduceJobMsg_ReduceKV_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ReduceJobMsg_ReduceKV& a, ReduceJobMsg_ReduceKV& b) {
    a.Swap(&b);
  }
  inline void Swap(ReduceJobMsg_ReduceKV* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReduceJobMsg_ReduceKV* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReduceJobMsg_ReduceKV* New() const final {
    return CreateMaybeMessage<ReduceJobMsg_ReduceKV>(nullptr);
  }

  ReduceJobMsg_ReduceKV* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReduceJobMsg_ReduceKV>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReduceJobMsg_ReduceKV& from);
  void MergeFrom(const ReduceJobMsg_ReduceKV& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReduceJobMsg_ReduceKV* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mapreduce.ReduceJobMsg.ReduceKV";
  }
  protected:
  explicit ReduceJobMsg_ReduceKV(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_worker_5fservice_2eproto);
    return ::descriptor_table_worker_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kKeyFieldNumber = 1,
  };
  // repeated string value = 2;
  int value_size() const;
  private:
  int _internal_value_size() const;
  public:
  void clear_value();
  const std::string& value(int index) const;
  std::string* mutable_value(int index);
  void set_value(int index, const std::string& value);
  void set_value(int index, std::string&& value);
  void set_value(int index, const char* value);
  void set_value(int index, const char* value, size_t size);
  std::string* add_value();
  void add_value(const std::string& value);
  void add_value(std::string&& value);
  void add_value(const char* value);
  void add_value(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_value();
  private:
  const std::string& _internal_value(int index) const;
  std::string* _internal_add_value();
  public:

  // string key = 1;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_key();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_key(
      std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // @@protoc_insertion_point(class_scope:mapreduce.ReduceJobMsg.ReduceKV)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_worker_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ReduceJobMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mapreduce.ReduceJobMsg) */ {
 public:
  inline ReduceJobMsg() : ReduceJobMsg(nullptr) {};
  virtual ~ReduceJobMsg();

  ReduceJobMsg(const ReduceJobMsg& from);
  ReduceJobMsg(ReduceJobMsg&& from) noexcept
    : ReduceJobMsg() {
    *this = ::std::move(from);
  }

  inline ReduceJobMsg& operator=(const ReduceJobMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReduceJobMsg& operator=(ReduceJobMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReduceJobMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReduceJobMsg* internal_default_instance() {
    return reinterpret_cast<const ReduceJobMsg*>(
               &_ReduceJobMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ReduceJobMsg& a, ReduceJobMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ReduceJobMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReduceJobMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReduceJobMsg* New() const final {
    return CreateMaybeMessage<ReduceJobMsg>(nullptr);
  }

  ReduceJobMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReduceJobMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReduceJobMsg& from);
  void MergeFrom(const ReduceJobMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReduceJobMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mapreduce.ReduceJobMsg";
  }
  protected:
  explicit ReduceJobMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_worker_5fservice_2eproto);
    return ::descriptor_table_worker_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ReduceJobMsg_ReduceKV ReduceKV;

  // accessors -------------------------------------------------------

  enum : int {
    kReduceKvsFieldNumber = 5,
    kNameFieldNumber = 3,
    kTypeFieldNumber = 4,
    kJobIdFieldNumber = 1,
    kSubjobIdFieldNumber = 2,
  };
  // repeated .mapreduce.ReduceJobMsg.ReduceKV reduce_kvs = 5;
  int reduce_kvs_size() const;
  private:
  int _internal_reduce_kvs_size() const;
  public:
  void clear_reduce_kvs();
  ::mapreduce::ReduceJobMsg_ReduceKV* mutable_reduce_kvs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::ReduceJobMsg_ReduceKV >*
      mutable_reduce_kvs();
  private:
  const ::mapreduce::ReduceJobMsg_ReduceKV& _internal_reduce_kvs(int index) const;
  ::mapreduce::ReduceJobMsg_ReduceKV* _internal_add_reduce_kvs();
  public:
  const ::mapreduce::ReduceJobMsg_ReduceKV& reduce_kvs(int index) const;
  ::mapreduce::ReduceJobMsg_ReduceKV* add_reduce_kvs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::ReduceJobMsg_ReduceKV >&
      reduce_kvs() const;

  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string type = 4;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_type();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_type(
      std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // uint32 job_id = 1;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_job_id() const;
  void _internal_set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 subjob_id = 2;
  void clear_subjob_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 subjob_id() const;
  void set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subjob_id() const;
  void _internal_set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mapreduce.ReduceJobMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::ReduceJobMsg_ReduceKV > reduce_kvs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 job_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subjob_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_worker_5fservice_2eproto;
};
// ===================================================================

class WorkerService_Stub;

class WorkerService : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline WorkerService() {};
 public:
  virtual ~WorkerService();

  typedef WorkerService_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void Beat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const PROTOBUF_NAMESPACE_ID::Empty* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);
  virtual void PrepareMap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::mapreduce::MapJobMsg* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);
  virtual void PrepareReduce(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::mapreduce::ReduceJobMsg* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);
  virtual void Start(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const PROTOBUF_NAMESPACE_ID::Empty* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(WorkerService);
};

class WorkerService_Stub : public WorkerService {
 public:
  WorkerService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  WorkerService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~WorkerService_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements WorkerService ------------------------------------------

  void Beat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const PROTOBUF_NAMESPACE_ID::Empty* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);
  void PrepareMap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::mapreduce::MapJobMsg* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);
  void PrepareReduce(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::mapreduce::ReduceJobMsg* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);
  void Start(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const PROTOBUF_NAMESPACE_ID::Empty* request,
                       ::mapreduce::WorkerReplyMsg* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(WorkerService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorkerReplyMsg

// bool ok = 1;
inline void WorkerReplyMsg::clear_ok() {
  ok_ = false;
}
inline bool WorkerReplyMsg::_internal_ok() const {
  return ok_;
}
inline bool WorkerReplyMsg::ok() const {
  // @@protoc_insertion_point(field_get:mapreduce.WorkerReplyMsg.ok)
  return _internal_ok();
}
inline void WorkerReplyMsg::_internal_set_ok(bool value) {
  
  ok_ = value;
}
inline void WorkerReplyMsg::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:mapreduce.WorkerReplyMsg.ok)
}

// string msg = 2;
inline void WorkerReplyMsg::clear_msg() {
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& WorkerReplyMsg::msg() const {
  // @@protoc_insertion_point(field_get:mapreduce.WorkerReplyMsg.msg)
  return _internal_msg();
}
inline void WorkerReplyMsg::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:mapreduce.WorkerReplyMsg.msg)
}
inline std::string* WorkerReplyMsg::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:mapreduce.WorkerReplyMsg.msg)
  return _internal_mutable_msg();
}
inline const std::string& WorkerReplyMsg::_internal_msg() const {
  return msg_.Get();
}
inline void WorkerReplyMsg::_internal_set_msg(const std::string& value) {
  
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void WorkerReplyMsg::set_msg(std::string&& value) {
  
  msg_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.WorkerReplyMsg.msg)
}
inline void WorkerReplyMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.WorkerReplyMsg.msg)
}
inline void WorkerReplyMsg::set_msg(const char* value,
    size_t size) {
  
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.WorkerReplyMsg.msg)
}
inline std::string* WorkerReplyMsg::_internal_mutable_msg() {
  
  return msg_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* WorkerReplyMsg::release_msg() {
  // @@protoc_insertion_point(field_release:mapreduce.WorkerReplyMsg.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WorkerReplyMsg::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.WorkerReplyMsg.msg)
}
inline std::string* WorkerReplyMsg::unsafe_arena_release_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.WorkerReplyMsg.msg)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return msg_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void WorkerReplyMsg::unsafe_arena_set_allocated_msg(
    std::string* msg) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      msg, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.WorkerReplyMsg.msg)
}

// .mapreduce.WorkerState state = 3;
inline void WorkerReplyMsg::clear_state() {
  state_ = 0;
}
inline ::mapreduce::WorkerState WorkerReplyMsg::_internal_state() const {
  return static_cast< ::mapreduce::WorkerState >(state_);
}
inline ::mapreduce::WorkerState WorkerReplyMsg::state() const {
  // @@protoc_insertion_point(field_get:mapreduce.WorkerReplyMsg.state)
  return _internal_state();
}
inline void WorkerReplyMsg::_internal_set_state(::mapreduce::WorkerState value) {
  
  state_ = value;
}
inline void WorkerReplyMsg::set_state(::mapreduce::WorkerState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:mapreduce.WorkerReplyMsg.state)
}

// -------------------------------------------------------------------

// MapJobMsg_MapKV

// string key = 1;
inline void MapJobMsg_MapKV::clear_key() {
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MapJobMsg_MapKV::key() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapJobMsg.MapKV.key)
  return _internal_key();
}
inline void MapJobMsg_MapKV::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:mapreduce.MapJobMsg.MapKV.key)
}
inline std::string* MapJobMsg_MapKV::mutable_key() {
  // @@protoc_insertion_point(field_mutable:mapreduce.MapJobMsg.MapKV.key)
  return _internal_mutable_key();
}
inline const std::string& MapJobMsg_MapKV::_internal_key() const {
  return key_.Get();
}
inline void MapJobMsg_MapKV::_internal_set_key(const std::string& value) {
  
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MapJobMsg_MapKV::set_key(std::string&& value) {
  
  key_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.MapJobMsg.MapKV.key)
}
inline void MapJobMsg_MapKV::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.MapJobMsg.MapKV.key)
}
inline void MapJobMsg_MapKV::set_key(const char* value,
    size_t size) {
  
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.MapJobMsg.MapKV.key)
}
inline std::string* MapJobMsg_MapKV::_internal_mutable_key() {
  
  return key_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MapJobMsg_MapKV::release_key() {
  // @@protoc_insertion_point(field_release:mapreduce.MapJobMsg.MapKV.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MapJobMsg_MapKV::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.MapJobMsg.MapKV.key)
}
inline std::string* MapJobMsg_MapKV::unsafe_arena_release_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.MapJobMsg.MapKV.key)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return key_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MapJobMsg_MapKV::unsafe_arena_set_allocated_key(
    std::string* key) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (key != nullptr) {
    
  } else {
    
  }
  key_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      key, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.MapJobMsg.MapKV.key)
}

// string value = 2;
inline void MapJobMsg_MapKV::clear_value() {
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MapJobMsg_MapKV::value() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapJobMsg.MapKV.value)
  return _internal_value();
}
inline void MapJobMsg_MapKV::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:mapreduce.MapJobMsg.MapKV.value)
}
inline std::string* MapJobMsg_MapKV::mutable_value() {
  // @@protoc_insertion_point(field_mutable:mapreduce.MapJobMsg.MapKV.value)
  return _internal_mutable_value();
}
inline const std::string& MapJobMsg_MapKV::_internal_value() const {
  return value_.Get();
}
inline void MapJobMsg_MapKV::_internal_set_value(const std::string& value) {
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MapJobMsg_MapKV::set_value(std::string&& value) {
  
  value_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.MapJobMsg.MapKV.value)
}
inline void MapJobMsg_MapKV::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.MapJobMsg.MapKV.value)
}
inline void MapJobMsg_MapKV::set_value(const char* value,
    size_t size) {
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.MapJobMsg.MapKV.value)
}
inline std::string* MapJobMsg_MapKV::_internal_mutable_value() {
  
  return value_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MapJobMsg_MapKV::release_value() {
  // @@protoc_insertion_point(field_release:mapreduce.MapJobMsg.MapKV.value)
  return value_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MapJobMsg_MapKV::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.MapJobMsg.MapKV.value)
}
inline std::string* MapJobMsg_MapKV::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.MapJobMsg.MapKV.value)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return value_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MapJobMsg_MapKV::unsafe_arena_set_allocated_value(
    std::string* value) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (value != nullptr) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      value, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.MapJobMsg.MapKV.value)
}

// -------------------------------------------------------------------

// MapJobMsg

// uint32 job_id = 1;
inline void MapJobMsg::clear_job_id() {
  job_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapJobMsg::_internal_job_id() const {
  return job_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapJobMsg::job_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapJobMsg.job_id)
  return _internal_job_id();
}
inline void MapJobMsg::_internal_set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  job_id_ = value;
}
inline void MapJobMsg::set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_job_id(value);
  // @@protoc_insertion_point(field_set:mapreduce.MapJobMsg.job_id)
}

// uint32 subjob_id = 2;
inline void MapJobMsg::clear_subjob_id() {
  subjob_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapJobMsg::_internal_subjob_id() const {
  return subjob_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapJobMsg::subjob_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapJobMsg.subjob_id)
  return _internal_subjob_id();
}
inline void MapJobMsg::_internal_set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subjob_id_ = value;
}
inline void MapJobMsg::set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subjob_id(value);
  // @@protoc_insertion_point(field_set:mapreduce.MapJobMsg.subjob_id)
}

// string name = 3;
inline void MapJobMsg::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MapJobMsg::name() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapJobMsg.name)
  return _internal_name();
}
inline void MapJobMsg::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:mapreduce.MapJobMsg.name)
}
inline std::string* MapJobMsg::mutable_name() {
  // @@protoc_insertion_point(field_mutable:mapreduce.MapJobMsg.name)
  return _internal_mutable_name();
}
inline const std::string& MapJobMsg::_internal_name() const {
  return name_.Get();
}
inline void MapJobMsg::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MapJobMsg::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.MapJobMsg.name)
}
inline void MapJobMsg::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.MapJobMsg.name)
}
inline void MapJobMsg::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.MapJobMsg.name)
}
inline std::string* MapJobMsg::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MapJobMsg::release_name() {
  // @@protoc_insertion_point(field_release:mapreduce.MapJobMsg.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MapJobMsg::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.MapJobMsg.name)
}
inline std::string* MapJobMsg::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.MapJobMsg.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MapJobMsg::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.MapJobMsg.name)
}

// string type = 4;
inline void MapJobMsg::clear_type() {
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MapJobMsg::type() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapJobMsg.type)
  return _internal_type();
}
inline void MapJobMsg::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:mapreduce.MapJobMsg.type)
}
inline std::string* MapJobMsg::mutable_type() {
  // @@protoc_insertion_point(field_mutable:mapreduce.MapJobMsg.type)
  return _internal_mutable_type();
}
inline const std::string& MapJobMsg::_internal_type() const {
  return type_.Get();
}
inline void MapJobMsg::_internal_set_type(const std::string& value) {
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MapJobMsg::set_type(std::string&& value) {
  
  type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.MapJobMsg.type)
}
inline void MapJobMsg::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.MapJobMsg.type)
}
inline void MapJobMsg::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.MapJobMsg.type)
}
inline std::string* MapJobMsg::_internal_mutable_type() {
  
  return type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MapJobMsg::release_type() {
  // @@protoc_insertion_point(field_release:mapreduce.MapJobMsg.type)
  return type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MapJobMsg::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.MapJobMsg.type)
}
inline std::string* MapJobMsg::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.MapJobMsg.type)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return type_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MapJobMsg::unsafe_arena_set_allocated_type(
    std::string* type) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (type != nullptr) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      type, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.MapJobMsg.type)
}

// repeated .mapreduce.MapJobMsg.MapKV map_kvs = 5;
inline int MapJobMsg::_internal_map_kvs_size() const {
  return map_kvs_.size();
}
inline int MapJobMsg::map_kvs_size() const {
  return _internal_map_kvs_size();
}
inline void MapJobMsg::clear_map_kvs() {
  map_kvs_.Clear();
}
inline ::mapreduce::MapJobMsg_MapKV* MapJobMsg::mutable_map_kvs(int index) {
  // @@protoc_insertion_point(field_mutable:mapreduce.MapJobMsg.map_kvs)
  return map_kvs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::MapJobMsg_MapKV >*
MapJobMsg::mutable_map_kvs() {
  // @@protoc_insertion_point(field_mutable_list:mapreduce.MapJobMsg.map_kvs)
  return &map_kvs_;
}
inline const ::mapreduce::MapJobMsg_MapKV& MapJobMsg::_internal_map_kvs(int index) const {
  return map_kvs_.Get(index);
}
inline const ::mapreduce::MapJobMsg_MapKV& MapJobMsg::map_kvs(int index) const {
  // @@protoc_insertion_point(field_get:mapreduce.MapJobMsg.map_kvs)
  return _internal_map_kvs(index);
}
inline ::mapreduce::MapJobMsg_MapKV* MapJobMsg::_internal_add_map_kvs() {
  return map_kvs_.Add();
}
inline ::mapreduce::MapJobMsg_MapKV* MapJobMsg::add_map_kvs() {
  // @@protoc_insertion_point(field_add:mapreduce.MapJobMsg.map_kvs)
  return _internal_add_map_kvs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::MapJobMsg_MapKV >&
MapJobMsg::map_kvs() const {
  // @@protoc_insertion_point(field_list:mapreduce.MapJobMsg.map_kvs)
  return map_kvs_;
}

// -------------------------------------------------------------------

// ReduceJobMsg_ReduceKV

// string key = 1;
inline void ReduceJobMsg_ReduceKV::clear_key() {
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ReduceJobMsg_ReduceKV::key() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceJobMsg.ReduceKV.key)
  return _internal_key();
}
inline void ReduceJobMsg_ReduceKV::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:mapreduce.ReduceJobMsg.ReduceKV.key)
}
inline std::string* ReduceJobMsg_ReduceKV::mutable_key() {
  // @@protoc_insertion_point(field_mutable:mapreduce.ReduceJobMsg.ReduceKV.key)
  return _internal_mutable_key();
}
inline const std::string& ReduceJobMsg_ReduceKV::_internal_key() const {
  return key_.Get();
}
inline void ReduceJobMsg_ReduceKV::_internal_set_key(const std::string& value) {
  
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ReduceJobMsg_ReduceKV::set_key(std::string&& value) {
  
  key_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.ReduceJobMsg.ReduceKV.key)
}
inline void ReduceJobMsg_ReduceKV::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.ReduceJobMsg.ReduceKV.key)
}
inline void ReduceJobMsg_ReduceKV::set_key(const char* value,
    size_t size) {
  
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.ReduceJobMsg.ReduceKV.key)
}
inline std::string* ReduceJobMsg_ReduceKV::_internal_mutable_key() {
  
  return key_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ReduceJobMsg_ReduceKV::release_key() {
  // @@protoc_insertion_point(field_release:mapreduce.ReduceJobMsg.ReduceKV.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReduceJobMsg_ReduceKV::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.ReduceJobMsg.ReduceKV.key)
}
inline std::string* ReduceJobMsg_ReduceKV::unsafe_arena_release_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.ReduceJobMsg.ReduceKV.key)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return key_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ReduceJobMsg_ReduceKV::unsafe_arena_set_allocated_key(
    std::string* key) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (key != nullptr) {
    
  } else {
    
  }
  key_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      key, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.ReduceJobMsg.ReduceKV.key)
}

// repeated string value = 2;
inline int ReduceJobMsg_ReduceKV::_internal_value_size() const {
  return value_.size();
}
inline int ReduceJobMsg_ReduceKV::value_size() const {
  return _internal_value_size();
}
inline void ReduceJobMsg_ReduceKV::clear_value() {
  value_.Clear();
}
inline std::string* ReduceJobMsg_ReduceKV::add_value() {
  // @@protoc_insertion_point(field_add_mutable:mapreduce.ReduceJobMsg.ReduceKV.value)
  return _internal_add_value();
}
inline const std::string& ReduceJobMsg_ReduceKV::_internal_value(int index) const {
  return value_.Get(index);
}
inline const std::string& ReduceJobMsg_ReduceKV::value(int index) const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceJobMsg.ReduceKV.value)
  return _internal_value(index);
}
inline std::string* ReduceJobMsg_ReduceKV::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:mapreduce.ReduceJobMsg.ReduceKV.value)
  return value_.Mutable(index);
}
inline void ReduceJobMsg_ReduceKV::set_value(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:mapreduce.ReduceJobMsg.ReduceKV.value)
  value_.Mutable(index)->assign(value);
}
inline void ReduceJobMsg_ReduceKV::set_value(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:mapreduce.ReduceJobMsg.ReduceKV.value)
  value_.Mutable(index)->assign(std::move(value));
}
inline void ReduceJobMsg_ReduceKV::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mapreduce.ReduceJobMsg.ReduceKV.value)
}
inline void ReduceJobMsg_ReduceKV::set_value(int index, const char* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mapreduce.ReduceJobMsg.ReduceKV.value)
}
inline std::string* ReduceJobMsg_ReduceKV::_internal_add_value() {
  return value_.Add();
}
inline void ReduceJobMsg_ReduceKV::add_value(const std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mapreduce.ReduceJobMsg.ReduceKV.value)
}
inline void ReduceJobMsg_ReduceKV::add_value(std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mapreduce.ReduceJobMsg.ReduceKV.value)
}
inline void ReduceJobMsg_ReduceKV::add_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mapreduce.ReduceJobMsg.ReduceKV.value)
}
inline void ReduceJobMsg_ReduceKV::add_value(const char* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mapreduce.ReduceJobMsg.ReduceKV.value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ReduceJobMsg_ReduceKV::value() const {
  // @@protoc_insertion_point(field_list:mapreduce.ReduceJobMsg.ReduceKV.value)
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ReduceJobMsg_ReduceKV::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:mapreduce.ReduceJobMsg.ReduceKV.value)
  return &value_;
}

// -------------------------------------------------------------------

// ReduceJobMsg

// uint32 job_id = 1;
inline void ReduceJobMsg::clear_job_id() {
  job_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ReduceJobMsg::_internal_job_id() const {
  return job_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ReduceJobMsg::job_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceJobMsg.job_id)
  return _internal_job_id();
}
inline void ReduceJobMsg::_internal_set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  job_id_ = value;
}
inline void ReduceJobMsg::set_job_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_job_id(value);
  // @@protoc_insertion_point(field_set:mapreduce.ReduceJobMsg.job_id)
}

// uint32 subjob_id = 2;
inline void ReduceJobMsg::clear_subjob_id() {
  subjob_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ReduceJobMsg::_internal_subjob_id() const {
  return subjob_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ReduceJobMsg::subjob_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceJobMsg.subjob_id)
  return _internal_subjob_id();
}
inline void ReduceJobMsg::_internal_set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subjob_id_ = value;
}
inline void ReduceJobMsg::set_subjob_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subjob_id(value);
  // @@protoc_insertion_point(field_set:mapreduce.ReduceJobMsg.subjob_id)
}

// string name = 3;
inline void ReduceJobMsg::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ReduceJobMsg::name() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceJobMsg.name)
  return _internal_name();
}
inline void ReduceJobMsg::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:mapreduce.ReduceJobMsg.name)
}
inline std::string* ReduceJobMsg::mutable_name() {
  // @@protoc_insertion_point(field_mutable:mapreduce.ReduceJobMsg.name)
  return _internal_mutable_name();
}
inline const std::string& ReduceJobMsg::_internal_name() const {
  return name_.Get();
}
inline void ReduceJobMsg::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ReduceJobMsg::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.ReduceJobMsg.name)
}
inline void ReduceJobMsg::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.ReduceJobMsg.name)
}
inline void ReduceJobMsg::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.ReduceJobMsg.name)
}
inline std::string* ReduceJobMsg::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ReduceJobMsg::release_name() {
  // @@protoc_insertion_point(field_release:mapreduce.ReduceJobMsg.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReduceJobMsg::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.ReduceJobMsg.name)
}
inline std::string* ReduceJobMsg::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.ReduceJobMsg.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ReduceJobMsg::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.ReduceJobMsg.name)
}

// string type = 4;
inline void ReduceJobMsg::clear_type() {
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ReduceJobMsg::type() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceJobMsg.type)
  return _internal_type();
}
inline void ReduceJobMsg::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:mapreduce.ReduceJobMsg.type)
}
inline std::string* ReduceJobMsg::mutable_type() {
  // @@protoc_insertion_point(field_mutable:mapreduce.ReduceJobMsg.type)
  return _internal_mutable_type();
}
inline const std::string& ReduceJobMsg::_internal_type() const {
  return type_.Get();
}
inline void ReduceJobMsg::_internal_set_type(const std::string& value) {
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ReduceJobMsg::set_type(std::string&& value) {
  
  type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.ReduceJobMsg.type)
}
inline void ReduceJobMsg::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:mapreduce.ReduceJobMsg.type)
}
inline void ReduceJobMsg::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:mapreduce.ReduceJobMsg.type)
}
inline std::string* ReduceJobMsg::_internal_mutable_type() {
  
  return type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ReduceJobMsg::release_type() {
  // @@protoc_insertion_point(field_release:mapreduce.ReduceJobMsg.type)
  return type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReduceJobMsg::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:mapreduce.ReduceJobMsg.type)
}
inline std::string* ReduceJobMsg::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:mapreduce.ReduceJobMsg.type)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return type_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ReduceJobMsg::unsafe_arena_set_allocated_type(
    std::string* type) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (type != nullptr) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      type, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mapreduce.ReduceJobMsg.type)
}

// repeated .mapreduce.ReduceJobMsg.ReduceKV reduce_kvs = 5;
inline int ReduceJobMsg::_internal_reduce_kvs_size() const {
  return reduce_kvs_.size();
}
inline int ReduceJobMsg::reduce_kvs_size() const {
  return _internal_reduce_kvs_size();
}
inline void ReduceJobMsg::clear_reduce_kvs() {
  reduce_kvs_.Clear();
}
inline ::mapreduce::ReduceJobMsg_ReduceKV* ReduceJobMsg::mutable_reduce_kvs(int index) {
  // @@protoc_insertion_point(field_mutable:mapreduce.ReduceJobMsg.reduce_kvs)
  return reduce_kvs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::ReduceJobMsg_ReduceKV >*
ReduceJobMsg::mutable_reduce_kvs() {
  // @@protoc_insertion_point(field_mutable_list:mapreduce.ReduceJobMsg.reduce_kvs)
  return &reduce_kvs_;
}
inline const ::mapreduce::ReduceJobMsg_ReduceKV& ReduceJobMsg::_internal_reduce_kvs(int index) const {
  return reduce_kvs_.Get(index);
}
inline const ::mapreduce::ReduceJobMsg_ReduceKV& ReduceJobMsg::reduce_kvs(int index) const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceJobMsg.reduce_kvs)
  return _internal_reduce_kvs(index);
}
inline ::mapreduce::ReduceJobMsg_ReduceKV* ReduceJobMsg::_internal_add_reduce_kvs() {
  return reduce_kvs_.Add();
}
inline ::mapreduce::ReduceJobMsg_ReduceKV* ReduceJobMsg::add_reduce_kvs() {
  // @@protoc_insertion_point(field_add:mapreduce.ReduceJobMsg.reduce_kvs)
  return _internal_add_reduce_kvs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mapreduce::ReduceJobMsg_ReduceKV >&
ReduceJobMsg::reduce_kvs() const {
  // @@protoc_insertion_point(field_list:mapreduce.ReduceJobMsg.reduce_kvs)
  return reduce_kvs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mapreduce

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_worker_5fservice_2eproto
