// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker_service.proto

#include "worker_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace mapreduce {
class ReplyMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplyMsg>
      _instance;
} _ReplyMsg_default_instance_;
class BeatMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BeatMsg>
      _instance;
} _BeatMsg_default_instance_;
}  // namespace mapreduce
namespace protobuf_worker_5fservice_2eproto {
void InitDefaultsReplyMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mapreduce::_ReplyMsg_default_instance_;
    new (ptr) ::mapreduce::ReplyMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::ReplyMsg::InitAsDefaultInstance();
}

void InitDefaultsReplyMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReplyMsgImpl);
}

void InitDefaultsBeatMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_worker_5fservice_2eproto::InitDefaultsReplyMsg();
  {
    void* ptr = &::mapreduce::_BeatMsg_default_instance_;
    new (ptr) ::mapreduce::BeatMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::BeatMsg::InitAsDefaultInstance();
}

void InitDefaultsBeatMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBeatMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mapreduce::ReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mapreduce::ReplyMsg, ok_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mapreduce::ReplyMsg, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mapreduce::BeatMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mapreduce::BeatMsg, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mapreduce::BeatMsg, reply_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mapreduce::ReplyMsg)},
  { 7, -1, sizeof(::mapreduce::BeatMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mapreduce::_ReplyMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mapreduce::_BeatMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "worker_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024worker_service.proto\022\tmapreduce\032\033googl"
      "e/protobuf/empty.proto\"#\n\010ReplyMsg\022\n\n\002ok"
      "\030\001 \001(\010\022\013\n\003msg\030\002 \001(\t\"\244\001\n\007BeatMsg\022-\n\005state"
      "\030\001 \001(\0162\036.mapreduce.BeatMsg.WorkerState\022\""
      "\n\005reply\030\002 \001(\0132\023.mapreduce.ReplyMsg\"F\n\013Wo"
      "rkerState\022\013\n\007UNKNOWN\020\000\022\010\n\004INIT\020\001\022\010\n\004IDLE"
      "\020\002\022\013\n\007WORKING\020\003\022\t\n\005CLOSE\020\0042E\n\rWorkerServ"
      "ice\0224\n\004Beat\022\026.google.protobuf.Empty\032\022.ma"
      "preduce.BeatMsg\"\000B\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 350);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "worker_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_worker_5fservice_2eproto
namespace mapreduce {
const ::google::protobuf::EnumDescriptor* BeatMsg_WorkerState_descriptor() {
  protobuf_worker_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_worker_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool BeatMsg_WorkerState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BeatMsg_WorkerState BeatMsg::UNKNOWN;
const BeatMsg_WorkerState BeatMsg::INIT;
const BeatMsg_WorkerState BeatMsg::IDLE;
const BeatMsg_WorkerState BeatMsg::WORKING;
const BeatMsg_WorkerState BeatMsg::CLOSE;
const BeatMsg_WorkerState BeatMsg::WorkerState_MIN;
const BeatMsg_WorkerState BeatMsg::WorkerState_MAX;
const int BeatMsg::WorkerState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ReplyMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyMsg::kOkFieldNumber;
const int ReplyMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyMsg::ReplyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_worker_5fservice_2eproto::InitDefaultsReplyMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mapreduce.ReplyMsg)
}
ReplyMsg::ReplyMsg(const ReplyMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:mapreduce.ReplyMsg)
}

void ReplyMsg::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ok_ = false;
  _cached_size_ = 0;
}

ReplyMsg::~ReplyMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.ReplyMsg)
  SharedDtor();
}

void ReplyMsg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReplyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyMsg::descriptor() {
  ::protobuf_worker_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_worker_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplyMsg& ReplyMsg::default_instance() {
  ::protobuf_worker_5fservice_2eproto::InitDefaultsReplyMsg();
  return *internal_default_instance();
}

ReplyMsg* ReplyMsg::New(::google::protobuf::Arena* arena) const {
  ReplyMsg* n = new ReplyMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.ReplyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ok_ = false;
  _internal_metadata_.Clear();
}

bool ReplyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mapreduce.ReplyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ok = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mapreduce.ReplyMsg.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mapreduce.ReplyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mapreduce.ReplyMsg)
  return false;
#undef DO_
}

void ReplyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mapreduce.ReplyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ok(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mapreduce.ReplyMsg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mapreduce.ReplyMsg)
}

::google::protobuf::uint8* ReplyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.ReplyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ok(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mapreduce.ReplyMsg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.ReplyMsg)
  return target;
}

size_t ReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.ReplyMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.ReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplyMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.ReplyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.ReplyMsg)
    MergeFrom(*source);
  }
}

void ReplyMsg::MergeFrom(const ReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.ReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.ok() != 0) {
    set_ok(from.ok());
  }
}

void ReplyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.ReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyMsg::CopyFrom(const ReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.ReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyMsg::IsInitialized() const {
  return true;
}

void ReplyMsg::Swap(ReplyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyMsg::InternalSwap(ReplyMsg* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(ok_, other->ok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReplyMsg::GetMetadata() const {
  protobuf_worker_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_worker_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BeatMsg::InitAsDefaultInstance() {
  ::mapreduce::_BeatMsg_default_instance_._instance.get_mutable()->reply_ = const_cast< ::mapreduce::ReplyMsg*>(
      ::mapreduce::ReplyMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeatMsg::kStateFieldNumber;
const int BeatMsg::kReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeatMsg::BeatMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_worker_5fservice_2eproto::InitDefaultsBeatMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mapreduce.BeatMsg)
}
BeatMsg::BeatMsg(const BeatMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reply()) {
    reply_ = new ::mapreduce::ReplyMsg(*from.reply_);
  } else {
    reply_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:mapreduce.BeatMsg)
}

void BeatMsg::SharedCtor() {
  ::memset(&reply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&reply_)) + sizeof(state_));
  _cached_size_ = 0;
}

BeatMsg::~BeatMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.BeatMsg)
  SharedDtor();
}

void BeatMsg::SharedDtor() {
  if (this != internal_default_instance()) delete reply_;
}

void BeatMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeatMsg::descriptor() {
  ::protobuf_worker_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_worker_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeatMsg& BeatMsg::default_instance() {
  ::protobuf_worker_5fservice_2eproto::InitDefaultsBeatMsg();
  return *internal_default_instance();
}

BeatMsg* BeatMsg::New(::google::protobuf::Arena* arena) const {
  BeatMsg* n = new BeatMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeatMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.BeatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && reply_ != NULL) {
    delete reply_;
  }
  reply_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool BeatMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mapreduce.BeatMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mapreduce.BeatMsg.WorkerState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::mapreduce::BeatMsg_WorkerState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mapreduce.ReplyMsg reply = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mapreduce.BeatMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mapreduce.BeatMsg)
  return false;
#undef DO_
}

void BeatMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mapreduce.BeatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mapreduce.BeatMsg.WorkerState state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // .mapreduce.ReplyMsg reply = 2;
  if (this->has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->reply_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mapreduce.BeatMsg)
}

::google::protobuf::uint8* BeatMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.BeatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mapreduce.BeatMsg.WorkerState state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // .mapreduce.ReplyMsg reply = 2;
  if (this->has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->reply_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.BeatMsg)
  return target;
}

size_t BeatMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.BeatMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .mapreduce.ReplyMsg reply = 2;
  if (this->has_reply()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->reply_);
  }

  // .mapreduce.BeatMsg.WorkerState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeatMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.BeatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BeatMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeatMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.BeatMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.BeatMsg)
    MergeFrom(*source);
  }
}

void BeatMsg::MergeFrom(const BeatMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.BeatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reply()) {
    mutable_reply()->::mapreduce::ReplyMsg::MergeFrom(from.reply());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void BeatMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.BeatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeatMsg::CopyFrom(const BeatMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.BeatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeatMsg::IsInitialized() const {
  return true;
}

void BeatMsg::Swap(BeatMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeatMsg::InternalSwap(BeatMsg* other) {
  using std::swap;
  swap(reply_, other->reply_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeatMsg::GetMetadata() const {
  protobuf_worker_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_worker_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

WorkerService::~WorkerService() {}

const ::google::protobuf::ServiceDescriptor* WorkerService::descriptor() {
  protobuf_worker_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_worker_5fservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* WorkerService::GetDescriptor() {
  return descriptor();
}

void WorkerService::Beat(::google::protobuf::RpcController* controller,
                         const ::google::protobuf::Empty*,
                         ::mapreduce::BeatMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Beat() not implemented.");
  done->Run();
}

void WorkerService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_worker_5fservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Beat(controller,
             ::google::protobuf::down_cast<const ::google::protobuf::Empty*>(request),
             ::google::protobuf::down_cast< ::mapreduce::BeatMsg*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& WorkerService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::google::protobuf::Empty::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& WorkerService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::mapreduce::BeatMsg::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

WorkerService_Stub::WorkerService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
WorkerService_Stub::WorkerService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
WorkerService_Stub::~WorkerService_Stub() {
  if (owns_channel_) delete channel_;
}

void WorkerService_Stub::Beat(::google::protobuf::RpcController* controller,
                              const ::google::protobuf::Empty* request,
                              ::mapreduce::BeatMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mapreduce

// @@protoc_insertion_point(global_scope)
