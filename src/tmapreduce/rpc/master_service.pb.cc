// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master_service.proto

#include "master_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_master_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobMsg_KV_master_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_master_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MapResultMsg_KV_master_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_master_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MasterReplyMsg_master_5fservice_2eproto;
namespace mapreduce {
class MasterReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MasterReplyMsg> _instance;
} _MasterReplyMsg_default_instance_;
class RegisterMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterMsg> _instance;
} _RegisterMsg_default_instance_;
class RegisterReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterReplyMsg> _instance;
} _RegisterReplyMsg_default_instance_;
class JobMsg_KVDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobMsg_KV> _instance;
} _JobMsg_KV_default_instance_;
class JobMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobMsg> _instance;
} _JobMsg_default_instance_;
class LaunchReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LaunchReplyMsg> _instance;
} _LaunchReplyMsg_default_instance_;
class MapResultMsg_KVDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapResultMsg_KV> _instance;
} _MapResultMsg_KV_default_instance_;
class MapResultMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapResultMsg> _instance;
} _MapResultMsg_default_instance_;
class ReduceResultMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReduceResultMsg> _instance;
} _ReduceResultMsg_default_instance_;
class GetResultMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResultMsg> _instance;
} _GetResultMsg_default_instance_;
class GetResultReplyMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResultReplyMsg> _instance;
} _GetResultReplyMsg_default_instance_;
}  // namespace mapreduce
static void InitDefaultsscc_info_GetResultMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_GetResultMsg_default_instance_;
    new (ptr) ::mapreduce::GetResultMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::GetResultMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResultMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResultMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetResultReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_GetResultReplyMsg_default_instance_;
    new (ptr) ::mapreduce::GetResultReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::GetResultReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResultReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResultReplyMsg_master_5fservice_2eproto}, {
      &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_JobMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_JobMsg_default_instance_;
    new (ptr) ::mapreduce::JobMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::JobMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JobMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_JobMsg_master_5fservice_2eproto}, {
      &scc_info_JobMsg_KV_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_JobMsg_KV_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_JobMsg_KV_default_instance_;
    new (ptr) ::mapreduce::JobMsg_KV();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::JobMsg_KV::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobMsg_KV_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobMsg_KV_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LaunchReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_LaunchReplyMsg_default_instance_;
    new (ptr) ::mapreduce::LaunchReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::LaunchReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LaunchReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LaunchReplyMsg_master_5fservice_2eproto}, {
      &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_MapResultMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_MapResultMsg_default_instance_;
    new (ptr) ::mapreduce::MapResultMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::MapResultMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapResultMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MapResultMsg_master_5fservice_2eproto}, {
      &scc_info_MapResultMsg_KV_master_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_MapResultMsg_KV_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_MapResultMsg_KV_default_instance_;
    new (ptr) ::mapreduce::MapResultMsg_KV();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::MapResultMsg_KV::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MapResultMsg_KV_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MapResultMsg_KV_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_MasterReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_MasterReplyMsg_default_instance_;
    new (ptr) ::mapreduce::MasterReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::MasterReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MasterReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MasterReplyMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ReduceResultMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_ReduceResultMsg_default_instance_;
    new (ptr) ::mapreduce::ReduceResultMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::ReduceResultMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReduceResultMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReduceResultMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RegisterMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_RegisterMsg_default_instance_;
    new (ptr) ::mapreduce::RegisterMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::RegisterMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterMsg_master_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RegisterReplyMsg_master_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mapreduce::_RegisterReplyMsg_default_instance_;
    new (ptr) ::mapreduce::RegisterReplyMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mapreduce::RegisterReplyMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterReplyMsg_master_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterReplyMsg_master_5fservice_2eproto}, {
      &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_master_5fservice_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_master_5fservice_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_master_5fservice_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_master_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::MasterReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::MasterReplyMsg, ok_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::MasterReplyMsg, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::RegisterMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::RegisterMsg, name_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::RegisterMsg, port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::RegisterReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::RegisterReplyMsg, reply_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::RegisterReplyMsg, worker_id_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::RegisterReplyMsg, master_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg_KV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg_KV, key_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg_KV, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg, name_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg, type_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg, mapper_num_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg, reducer_num_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::JobMsg, kvs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::LaunchReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::LaunchReplyMsg, reply_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::LaunchReplyMsg, job_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg_KV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg_KV, key_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg_KV, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg, job_id_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg, subjob_id_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg, worker_id_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg, state_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::MapResultMsg, map_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::ReduceResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::ReduceResultMsg, job_id_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::ReduceResultMsg, subjob_id_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::ReduceResultMsg, worker_id_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::ReduceResultMsg, state_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::ReduceResultMsg, reduce_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::GetResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::GetResultMsg, job_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mapreduce::GetResultReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mapreduce::GetResultReplyMsg, reply_),
  PROTOBUF_FIELD_OFFSET(::mapreduce::GetResultReplyMsg, results_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mapreduce::MasterReplyMsg)},
  { 7, -1, sizeof(::mapreduce::RegisterMsg)},
  { 14, -1, sizeof(::mapreduce::RegisterReplyMsg)},
  { 22, -1, sizeof(::mapreduce::JobMsg_KV)},
  { 29, -1, sizeof(::mapreduce::JobMsg)},
  { 39, -1, sizeof(::mapreduce::LaunchReplyMsg)},
  { 46, -1, sizeof(::mapreduce::MapResultMsg_KV)},
  { 53, -1, sizeof(::mapreduce::MapResultMsg)},
  { 63, -1, sizeof(::mapreduce::ReduceResultMsg)},
  { 73, -1, sizeof(::mapreduce::GetResultMsg)},
  { 79, -1, sizeof(::mapreduce::GetResultReplyMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_MasterReplyMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_RegisterMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_RegisterReplyMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_JobMsg_KV_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_JobMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_LaunchReplyMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_MapResultMsg_KV_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_MapResultMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_ReduceResultMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_GetResultMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mapreduce::_GetResultReplyMsg_default_instance_),
};

const char descriptor_table_protodef_master_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024master_service.proto\022\tmapreduce\032\013state"
  ".proto\")\n\016MasterReplyMsg\022\n\n\002ok\030\001 \001(\010\022\013\n\003"
  "msg\030\002 \001(\t\")\n\013RegisterMsg\022\014\n\004name\030\001 \001(\t\022\014"
  "\n\004port\030\002 \001(\r\"b\n\020RegisterReplyMsg\022(\n\005repl"
  "y\030\001 \001(\0132\031.mapreduce.MasterReplyMsg\022\021\n\two"
  "rker_id\030\002 \001(\r\022\021\n\tmaster_id\030\003 \001(\r\"\222\001\n\006Job"
  "Msg\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\022\n\nmappe"
  "r_num\030\003 \001(\r\022\023\n\013reducer_num\030\004 \001(\r\022!\n\003kvs\030"
  "\005 \003(\0132\024.mapreduce.JobMsg.KV\032 \n\002KV\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"J\n\016LaunchReplyMsg\022"
  "(\n\005reply\030\001 \001(\0132\031.mapreduce.MasterReplyMs"
  "g\022\016\n\006job_id\030\002 \001(\r\"\275\001\n\014MapResultMsg\022\016\n\006jo"
  "b_id\030\001 \001(\r\022\021\n\tsubjob_id\030\002 \001(\r\022\021\n\tworker_"
  "id\030\003 \001(\r\022%\n\005state\030\004 \001(\0162\026.mapreduce.Work"
  "erState\022.\n\nmap_result\030\005 \003(\0132\032.mapreduce."
  "MapResultMsg.KV\032 \n\002KV\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
  "lue\030\002 \001(\t\"\205\001\n\017ReduceResultMsg\022\016\n\006job_id\030"
  "\001 \001(\r\022\021\n\tsubjob_id\030\002 \001(\r\022\021\n\tworker_id\030\003 "
  "\001(\r\022%\n\005state\030\004 \001(\0162\026.mapreduce.WorkerSta"
  "te\022\025\n\rreduce_result\030\005 \003(\t\"\036\n\014GetResultMs"
  "g\022\016\n\006job_id\030\001 \001(\r\"N\n\021GetResultReplyMsg\022("
  "\n\005reply\030\001 \001(\0132\031.mapreduce.MasterReplyMsg"
  "\022\017\n\007results\030\002 \003(\t2\342\002\n\rMasterService\022A\n\010R"
  "egister\022\026.mapreduce.RegisterMsg\032\033.mapred"
  "uce.RegisterReplyMsg\"\000\0228\n\006Launch\022\021.mapre"
  "duce.JobMsg\032\031.mapreduce.LaunchReplyMsg\"\000"
  "\022C\n\013CompleteMap\022\027.mapreduce.MapResultMsg"
  "\032\031.mapreduce.MasterReplyMsg\"\000\022I\n\016Complet"
  "eReduce\022\032.mapreduce.ReduceResultMsg\032\031.ma"
  "preduce.MasterReplyMsg\"\000\022D\n\tGetResult\022\027."
  "mapreduce.GetResultMsg\032\034.mapreduce.GetRe"
  "sultReplyMsg\"\000B\003\200\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_master_5fservice_2eproto_deps[1] = {
  &::descriptor_table_state_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_master_5fservice_2eproto_sccs[11] = {
  &scc_info_GetResultMsg_master_5fservice_2eproto.base,
  &scc_info_GetResultReplyMsg_master_5fservice_2eproto.base,
  &scc_info_JobMsg_master_5fservice_2eproto.base,
  &scc_info_JobMsg_KV_master_5fservice_2eproto.base,
  &scc_info_LaunchReplyMsg_master_5fservice_2eproto.base,
  &scc_info_MapResultMsg_master_5fservice_2eproto.base,
  &scc_info_MapResultMsg_KV_master_5fservice_2eproto.base,
  &scc_info_MasterReplyMsg_master_5fservice_2eproto.base,
  &scc_info_ReduceResultMsg_master_5fservice_2eproto.base,
  &scc_info_RegisterMsg_master_5fservice_2eproto.base,
  &scc_info_RegisterReplyMsg_master_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_master_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_master_5fservice_2eproto = {
  false, false, descriptor_table_protodef_master_5fservice_2eproto, "master_service.proto", 1267,
  &descriptor_table_master_5fservice_2eproto_once, descriptor_table_master_5fservice_2eproto_sccs, descriptor_table_master_5fservice_2eproto_deps, 11, 1,
  schemas, file_default_instances, TableStruct_master_5fservice_2eproto::offsets,
  file_level_metadata_master_5fservice_2eproto, 11, file_level_enum_descriptors_master_5fservice_2eproto, file_level_service_descriptors_master_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_master_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_master_5fservice_2eproto)), true);
namespace mapreduce {

// ===================================================================

void MasterReplyMsg::InitAsDefaultInstance() {
}
class MasterReplyMsg::_Internal {
 public:
};

MasterReplyMsg::MasterReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.MasterReplyMsg)
}
MasterReplyMsg::MasterReplyMsg(const MasterReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:mapreduce.MasterReplyMsg)
}

void MasterReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MasterReplyMsg_master_5fservice_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ok_ = false;
}

MasterReplyMsg::~MasterReplyMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.MasterReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MasterReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MasterReplyMsg::ArenaDtor(void* object) {
  MasterReplyMsg* _this = reinterpret_cast< MasterReplyMsg* >(object);
  (void)_this;
}
void MasterReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MasterReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterReplyMsg& MasterReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MasterReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MasterReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.MasterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MasterReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.MasterReplyMsg.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MasterReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.MasterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.MasterReplyMsg.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.MasterReplyMsg)
  return target;
}

size_t MasterReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.MasterReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.MasterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MasterReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.MasterReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.MasterReplyMsg)
    MergeFrom(*source);
  }
}

void MasterReplyMsg::MergeFrom(const MasterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.MasterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.ok() != 0) {
    _internal_set_ok(from._internal_ok());
  }
}

void MasterReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.MasterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterReplyMsg::CopyFrom(const MasterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.MasterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterReplyMsg::IsInitialized() const {
  return true;
}

void MasterReplyMsg::InternalSwap(MasterReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ok_, other->ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterMsg::InitAsDefaultInstance() {
}
class RegisterMsg::_Internal {
 public:
};

RegisterMsg::RegisterMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.RegisterMsg)
}
RegisterMsg::RegisterMsg(const RegisterMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:mapreduce.RegisterMsg)
}

void RegisterMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterMsg_master_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

RegisterMsg::~RegisterMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.RegisterMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterMsg::ArenaDtor(void* object) {
  RegisterMsg* _this = reinterpret_cast< RegisterMsg* >(object);
  (void)_this;
}
void RegisterMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterMsg& RegisterMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.RegisterMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  port_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.RegisterMsg.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.RegisterMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.RegisterMsg.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.RegisterMsg)
  return target;
}

size_t RegisterMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.RegisterMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.RegisterMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.RegisterMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.RegisterMsg)
    MergeFrom(*source);
  }
}

void RegisterMsg::MergeFrom(const RegisterMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.RegisterMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
}

void RegisterMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.RegisterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterMsg::CopyFrom(const RegisterMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.RegisterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterMsg::IsInitialized() const {
  return true;
}

void RegisterMsg::InternalSwap(RegisterMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(port_, other->port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterReplyMsg::InitAsDefaultInstance() {
  ::mapreduce::_RegisterReplyMsg_default_instance_._instance.get_mutable()->reply_ = const_cast< ::mapreduce::MasterReplyMsg*>(
      ::mapreduce::MasterReplyMsg::internal_default_instance());
}
class RegisterReplyMsg::_Internal {
 public:
  static const ::mapreduce::MasterReplyMsg& reply(const RegisterReplyMsg* msg);
};

const ::mapreduce::MasterReplyMsg&
RegisterReplyMsg::_Internal::reply(const RegisterReplyMsg* msg) {
  return *msg->reply_;
}
RegisterReplyMsg::RegisterReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.RegisterReplyMsg)
}
RegisterReplyMsg::RegisterReplyMsg(const RegisterReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reply()) {
    reply_ = new ::mapreduce::MasterReplyMsg(*from.reply_);
  } else {
    reply_ = nullptr;
  }
  ::memcpy(&worker_id_, &from.worker_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&master_id_) -
    reinterpret_cast<char*>(&worker_id_)) + sizeof(master_id_));
  // @@protoc_insertion_point(copy_constructor:mapreduce.RegisterReplyMsg)
}

void RegisterReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterReplyMsg_master_5fservice_2eproto.base);
  ::memset(&reply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&master_id_) -
      reinterpret_cast<char*>(&reply_)) + sizeof(master_id_));
}

RegisterReplyMsg::~RegisterReplyMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.RegisterReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete reply_;
}

void RegisterReplyMsg::ArenaDtor(void* object) {
  RegisterReplyMsg* _this = reinterpret_cast< RegisterReplyMsg* >(object);
  (void)_this;
}
void RegisterReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterReplyMsg& RegisterReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.RegisterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && reply_ != nullptr) {
    delete reply_;
  }
  reply_ = nullptr;
  ::memset(&worker_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&master_id_) -
      reinterpret_cast<char*>(&worker_id_)) + sizeof(master_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mapreduce.MasterReplyMsg reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 worker_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 master_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          master_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.RegisterReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reply(this), target, stream);
  }

  // uint32 worker_id = 2;
  if (this->worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_worker_id(), target);
  }

  // uint32 master_id = 3;
  if (this->master_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_master_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.RegisterReplyMsg)
  return target;
}

size_t RegisterReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.RegisterReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_);
  }

  // uint32 worker_id = 2;
  if (this->worker_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_worker_id());
  }

  // uint32 master_id = 3;
  if (this->master_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_master_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.RegisterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.RegisterReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.RegisterReplyMsg)
    MergeFrom(*source);
  }
}

void RegisterReplyMsg::MergeFrom(const RegisterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.RegisterReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reply()) {
    _internal_mutable_reply()->::mapreduce::MasterReplyMsg::MergeFrom(from._internal_reply());
  }
  if (from.worker_id() != 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.master_id() != 0) {
    _internal_set_master_id(from._internal_master_id());
  }
}

void RegisterReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.RegisterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterReplyMsg::CopyFrom(const RegisterReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.RegisterReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterReplyMsg::IsInitialized() const {
  return true;
}

void RegisterReplyMsg::InternalSwap(RegisterReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterReplyMsg, master_id_)
      + sizeof(RegisterReplyMsg::master_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterReplyMsg, reply_)>(
          reinterpret_cast<char*>(&reply_),
          reinterpret_cast<char*>(&other->reply_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobMsg_KV::InitAsDefaultInstance() {
}
class JobMsg_KV::_Internal {
 public:
};

JobMsg_KV::JobMsg_KV(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.JobMsg.KV)
}
JobMsg_KV::JobMsg_KV(const JobMsg_KV& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mapreduce.JobMsg.KV)
}

void JobMsg_KV::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobMsg_KV_master_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

JobMsg_KV::~JobMsg_KV() {
  // @@protoc_insertion_point(destructor:mapreduce.JobMsg.KV)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobMsg_KV::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JobMsg_KV::ArenaDtor(void* object) {
  JobMsg_KV* _this = reinterpret_cast< JobMsg_KV* >(object);
  (void)_this;
}
void JobMsg_KV::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobMsg_KV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobMsg_KV& JobMsg_KV::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobMsg_KV_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void JobMsg_KV::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.JobMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobMsg_KV::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.JobMsg.KV.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.JobMsg.KV.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobMsg_KV::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.JobMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.JobMsg.KV.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.JobMsg.KV.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.JobMsg.KV)
  return target;
}

size_t JobMsg_KV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.JobMsg.KV)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobMsg_KV::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.JobMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  const JobMsg_KV* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobMsg_KV>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.JobMsg.KV)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.JobMsg.KV)
    MergeFrom(*source);
  }
}

void JobMsg_KV::MergeFrom(const JobMsg_KV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.JobMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void JobMsg_KV::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.JobMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobMsg_KV::CopyFrom(const JobMsg_KV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.JobMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobMsg_KV::IsInitialized() const {
  return true;
}

void JobMsg_KV::InternalSwap(JobMsg_KV* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata JobMsg_KV::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobMsg::InitAsDefaultInstance() {
}
class JobMsg::_Internal {
 public:
};

JobMsg::JobMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  kvs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.JobMsg)
}
JobMsg::JobMsg(const JobMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      kvs_(from.kvs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  ::memcpy(&mapper_num_, &from.mapper_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&reducer_num_) -
    reinterpret_cast<char*>(&mapper_num_)) + sizeof(reducer_num_));
  // @@protoc_insertion_point(copy_constructor:mapreduce.JobMsg)
}

void JobMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobMsg_master_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&mapper_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reducer_num_) -
      reinterpret_cast<char*>(&mapper_num_)) + sizeof(reducer_num_));
}

JobMsg::~JobMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.JobMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JobMsg::ArenaDtor(void* object) {
  JobMsg* _this = reinterpret_cast< JobMsg* >(object);
  (void)_this;
}
void JobMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobMsg& JobMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void JobMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.JobMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kvs_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&mapper_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reducer_num_) -
      reinterpret_cast<char*>(&mapper_num_)) + sizeof(reducer_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.JobMsg.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.JobMsg.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 mapper_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          mapper_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 reducer_num = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          reducer_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .mapreduce.JobMsg.KV kvs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_kvs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.JobMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.JobMsg.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.JobMsg.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // uint32 mapper_num = 3;
  if (this->mapper_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mapper_num(), target);
  }

  // uint32 reducer_num = 4;
  if (this->reducer_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_reducer_num(), target);
  }

  // repeated .mapreduce.JobMsg.KV kvs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_kvs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_kvs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.JobMsg)
  return target;
}

size_t JobMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.JobMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mapreduce.JobMsg.KV kvs = 5;
  total_size += 1UL * this->_internal_kvs_size();
  for (const auto& msg : this->kvs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // uint32 mapper_num = 3;
  if (this->mapper_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mapper_num());
  }

  // uint32 reducer_num = 4;
  if (this->reducer_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reducer_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.JobMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const JobMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.JobMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.JobMsg)
    MergeFrom(*source);
  }
}

void JobMsg::MergeFrom(const JobMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.JobMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kvs_.MergeFrom(from.kvs_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.mapper_num() != 0) {
    _internal_set_mapper_num(from._internal_mapper_num());
  }
  if (from.reducer_num() != 0) {
    _internal_set_reducer_num(from._internal_reducer_num());
  }
}

void JobMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.JobMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobMsg::CopyFrom(const JobMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.JobMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobMsg::IsInitialized() const {
  return true;
}

void JobMsg::InternalSwap(JobMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  kvs_.InternalSwap(&other->kvs_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobMsg, reducer_num_)
      + sizeof(JobMsg::reducer_num_)
      - PROTOBUF_FIELD_OFFSET(JobMsg, mapper_num_)>(
          reinterpret_cast<char*>(&mapper_num_),
          reinterpret_cast<char*>(&other->mapper_num_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LaunchReplyMsg::InitAsDefaultInstance() {
  ::mapreduce::_LaunchReplyMsg_default_instance_._instance.get_mutable()->reply_ = const_cast< ::mapreduce::MasterReplyMsg*>(
      ::mapreduce::MasterReplyMsg::internal_default_instance());
}
class LaunchReplyMsg::_Internal {
 public:
  static const ::mapreduce::MasterReplyMsg& reply(const LaunchReplyMsg* msg);
};

const ::mapreduce::MasterReplyMsg&
LaunchReplyMsg::_Internal::reply(const LaunchReplyMsg* msg) {
  return *msg->reply_;
}
LaunchReplyMsg::LaunchReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.LaunchReplyMsg)
}
LaunchReplyMsg::LaunchReplyMsg(const LaunchReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reply()) {
    reply_ = new ::mapreduce::MasterReplyMsg(*from.reply_);
  } else {
    reply_ = nullptr;
  }
  job_id_ = from.job_id_;
  // @@protoc_insertion_point(copy_constructor:mapreduce.LaunchReplyMsg)
}

void LaunchReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LaunchReplyMsg_master_5fservice_2eproto.base);
  ::memset(&reply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_id_) -
      reinterpret_cast<char*>(&reply_)) + sizeof(job_id_));
}

LaunchReplyMsg::~LaunchReplyMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.LaunchReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LaunchReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete reply_;
}

void LaunchReplyMsg::ArenaDtor(void* object) {
  LaunchReplyMsg* _this = reinterpret_cast< LaunchReplyMsg* >(object);
  (void)_this;
}
void LaunchReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LaunchReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchReplyMsg& LaunchReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LaunchReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LaunchReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.LaunchReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && reply_ != nullptr) {
    delete reply_;
  }
  reply_ = nullptr;
  job_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LaunchReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mapreduce.MasterReplyMsg reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 job_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LaunchReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.LaunchReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reply(this), target, stream);
  }

  // uint32 job_id = 2;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_job_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.LaunchReplyMsg)
  return target;
}

size_t LaunchReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.LaunchReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_);
  }

  // uint32 job_id = 2;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.LaunchReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LaunchReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.LaunchReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.LaunchReplyMsg)
    MergeFrom(*source);
  }
}

void LaunchReplyMsg::MergeFrom(const LaunchReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.LaunchReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reply()) {
    _internal_mutable_reply()->::mapreduce::MasterReplyMsg::MergeFrom(from._internal_reply());
  }
  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
}

void LaunchReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.LaunchReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchReplyMsg::CopyFrom(const LaunchReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.LaunchReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchReplyMsg::IsInitialized() const {
  return true;
}

void LaunchReplyMsg::InternalSwap(LaunchReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaunchReplyMsg, job_id_)
      + sizeof(LaunchReplyMsg::job_id_)
      - PROTOBUF_FIELD_OFFSET(LaunchReplyMsg, reply_)>(
          reinterpret_cast<char*>(&reply_),
          reinterpret_cast<char*>(&other->reply_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LaunchReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MapResultMsg_KV::InitAsDefaultInstance() {
}
class MapResultMsg_KV::_Internal {
 public:
};

MapResultMsg_KV::MapResultMsg_KV(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.MapResultMsg.KV)
}
MapResultMsg_KV::MapResultMsg_KV(const MapResultMsg_KV& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mapreduce.MapResultMsg.KV)
}

void MapResultMsg_KV::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MapResultMsg_KV_master_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MapResultMsg_KV::~MapResultMsg_KV() {
  // @@protoc_insertion_point(destructor:mapreduce.MapResultMsg.KV)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MapResultMsg_KV::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MapResultMsg_KV::ArenaDtor(void* object) {
  MapResultMsg_KV* _this = reinterpret_cast< MapResultMsg_KV* >(object);
  (void)_this;
}
void MapResultMsg_KV::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MapResultMsg_KV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapResultMsg_KV& MapResultMsg_KV::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MapResultMsg_KV_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MapResultMsg_KV::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.MapResultMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MapResultMsg_KV::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.MapResultMsg.KV.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.MapResultMsg.KV.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MapResultMsg_KV::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.MapResultMsg.KV)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.MapResultMsg.KV.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.MapResultMsg.KV.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.MapResultMsg.KV)
  return target;
}

size_t MapResultMsg_KV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.MapResultMsg.KV)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapResultMsg_KV::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.MapResultMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  const MapResultMsg_KV* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MapResultMsg_KV>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.MapResultMsg.KV)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.MapResultMsg.KV)
    MergeFrom(*source);
  }
}

void MapResultMsg_KV::MergeFrom(const MapResultMsg_KV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.MapResultMsg.KV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void MapResultMsg_KV::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.MapResultMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapResultMsg_KV::CopyFrom(const MapResultMsg_KV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.MapResultMsg.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapResultMsg_KV::IsInitialized() const {
  return true;
}

void MapResultMsg_KV::InternalSwap(MapResultMsg_KV* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MapResultMsg_KV::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MapResultMsg::InitAsDefaultInstance() {
}
class MapResultMsg::_Internal {
 public:
};

MapResultMsg::MapResultMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  map_result_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.MapResultMsg)
}
MapResultMsg::MapResultMsg(const MapResultMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      map_result_(from.map_result_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:mapreduce.MapResultMsg)
}

void MapResultMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MapResultMsg_master_5fservice_2eproto.base);
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
}

MapResultMsg::~MapResultMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.MapResultMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MapResultMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MapResultMsg::ArenaDtor(void* object) {
  MapResultMsg* _this = reinterpret_cast< MapResultMsg* >(object);
  (void)_this;
}
void MapResultMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MapResultMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapResultMsg& MapResultMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MapResultMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MapResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.MapResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_result_.Clear();
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MapResultMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 job_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 subjob_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          subjob_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 worker_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mapreduce.WorkerState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::mapreduce::WorkerState>(val));
        } else goto handle_unusual;
        continue;
      // repeated .mapreduce.MapResultMsg.KV map_result = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_map_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MapResultMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.MapResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_job_id(), target);
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_subjob_id(), target);
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_worker_id(), target);
  }

  // .mapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // repeated .mapreduce.MapResultMsg.KV map_result = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_map_result_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_map_result(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.MapResultMsg)
  return target;
}

size_t MapResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.MapResultMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mapreduce.MapResultMsg.KV map_result = 5;
  total_size += 1UL * this->_internal_map_result_size();
  for (const auto& msg : this->map_result_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subjob_id());
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_worker_id());
  }

  // .mapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapResultMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.MapResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MapResultMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MapResultMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.MapResultMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.MapResultMsg)
    MergeFrom(*source);
  }
}

void MapResultMsg::MergeFrom(const MapResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.MapResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_result_.MergeFrom(from.map_result_);
  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
  if (from.subjob_id() != 0) {
    _internal_set_subjob_id(from._internal_subjob_id());
  }
  if (from.worker_id() != 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void MapResultMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.MapResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapResultMsg::CopyFrom(const MapResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.MapResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapResultMsg::IsInitialized() const {
  return true;
}

void MapResultMsg::InternalSwap(MapResultMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  map_result_.InternalSwap(&other->map_result_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapResultMsg, state_)
      + sizeof(MapResultMsg::state_)
      - PROTOBUF_FIELD_OFFSET(MapResultMsg, job_id_)>(
          reinterpret_cast<char*>(&job_id_),
          reinterpret_cast<char*>(&other->job_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MapResultMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReduceResultMsg::InitAsDefaultInstance() {
}
class ReduceResultMsg::_Internal {
 public:
};

ReduceResultMsg::ReduceResultMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reduce_result_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.ReduceResultMsg)
}
ReduceResultMsg::ReduceResultMsg(const ReduceResultMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      reduce_result_(from.reduce_result_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:mapreduce.ReduceResultMsg)
}

void ReduceResultMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReduceResultMsg_master_5fservice_2eproto.base);
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
}

ReduceResultMsg::~ReduceResultMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.ReduceResultMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReduceResultMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReduceResultMsg::ArenaDtor(void* object) {
  ReduceResultMsg* _this = reinterpret_cast< ReduceResultMsg* >(object);
  (void)_this;
}
void ReduceResultMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReduceResultMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReduceResultMsg& ReduceResultMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReduceResultMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ReduceResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.ReduceResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reduce_result_.Clear();
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReduceResultMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 job_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 subjob_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          subjob_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 worker_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mapreduce.WorkerState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::mapreduce::WorkerState>(val));
        } else goto handle_unusual;
        continue;
      // repeated string reduce_result = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_reduce_result();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.ReduceResultMsg.reduce_result"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReduceResultMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.ReduceResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_job_id(), target);
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_subjob_id(), target);
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_worker_id(), target);
  }

  // .mapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // repeated string reduce_result = 5;
  for (int i = 0, n = this->_internal_reduce_result_size(); i < n; i++) {
    const auto& s = this->_internal_reduce_result(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.ReduceResultMsg.reduce_result");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.ReduceResultMsg)
  return target;
}

size_t ReduceResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.ReduceResultMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string reduce_result = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(reduce_result_.size());
  for (int i = 0, n = reduce_result_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      reduce_result_.Get(i));
  }

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  // uint32 subjob_id = 2;
  if (this->subjob_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subjob_id());
  }

  // uint32 worker_id = 3;
  if (this->worker_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_worker_id());
  }

  // .mapreduce.WorkerState state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReduceResultMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.ReduceResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ReduceResultMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReduceResultMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.ReduceResultMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.ReduceResultMsg)
    MergeFrom(*source);
  }
}

void ReduceResultMsg::MergeFrom(const ReduceResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.ReduceResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reduce_result_.MergeFrom(from.reduce_result_);
  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
  if (from.subjob_id() != 0) {
    _internal_set_subjob_id(from._internal_subjob_id());
  }
  if (from.worker_id() != 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void ReduceResultMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.ReduceResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReduceResultMsg::CopyFrom(const ReduceResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.ReduceResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReduceResultMsg::IsInitialized() const {
  return true;
}

void ReduceResultMsg::InternalSwap(ReduceResultMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reduce_result_.InternalSwap(&other->reduce_result_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReduceResultMsg, state_)
      + sizeof(ReduceResultMsg::state_)
      - PROTOBUF_FIELD_OFFSET(ReduceResultMsg, job_id_)>(
          reinterpret_cast<char*>(&job_id_),
          reinterpret_cast<char*>(&other->job_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReduceResultMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResultMsg::InitAsDefaultInstance() {
}
class GetResultMsg::_Internal {
 public:
};

GetResultMsg::GetResultMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.GetResultMsg)
}
GetResultMsg::GetResultMsg(const GetResultMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  job_id_ = from.job_id_;
  // @@protoc_insertion_point(copy_constructor:mapreduce.GetResultMsg)
}

void GetResultMsg::SharedCtor() {
  job_id_ = 0u;
}

GetResultMsg::~GetResultMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.GetResultMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResultMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetResultMsg::ArenaDtor(void* object) {
  GetResultMsg* _this = reinterpret_cast< GetResultMsg* >(object);
  (void)_this;
}
void GetResultMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResultMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResultMsg& GetResultMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResultMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.GetResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 job_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          job_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResultMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.GetResultMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_job_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.GetResultMsg)
  return target;
}

size_t GetResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.GetResultMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_job_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResultMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.GetResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResultMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResultMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.GetResultMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.GetResultMsg)
    MergeFrom(*source);
  }
}

void GetResultMsg::MergeFrom(const GetResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.GetResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id() != 0) {
    _internal_set_job_id(from._internal_job_id());
  }
}

void GetResultMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.GetResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResultMsg::CopyFrom(const GetResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.GetResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultMsg::IsInitialized() const {
  return true;
}

void GetResultMsg::InternalSwap(GetResultMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(job_id_, other->job_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResultReplyMsg::InitAsDefaultInstance() {
  ::mapreduce::_GetResultReplyMsg_default_instance_._instance.get_mutable()->reply_ = const_cast< ::mapreduce::MasterReplyMsg*>(
      ::mapreduce::MasterReplyMsg::internal_default_instance());
}
class GetResultReplyMsg::_Internal {
 public:
  static const ::mapreduce::MasterReplyMsg& reply(const GetResultReplyMsg* msg);
};

const ::mapreduce::MasterReplyMsg&
GetResultReplyMsg::_Internal::reply(const GetResultReplyMsg* msg) {
  return *msg->reply_;
}
GetResultReplyMsg::GetResultReplyMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mapreduce.GetResultReplyMsg)
}
GetResultReplyMsg::GetResultReplyMsg(const GetResultReplyMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reply()) {
    reply_ = new ::mapreduce::MasterReplyMsg(*from.reply_);
  } else {
    reply_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mapreduce.GetResultReplyMsg)
}

void GetResultReplyMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResultReplyMsg_master_5fservice_2eproto.base);
  reply_ = nullptr;
}

GetResultReplyMsg::~GetResultReplyMsg() {
  // @@protoc_insertion_point(destructor:mapreduce.GetResultReplyMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResultReplyMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete reply_;
}

void GetResultReplyMsg::ArenaDtor(void* object) {
  GetResultReplyMsg* _this = reinterpret_cast< GetResultReplyMsg* >(object);
  (void)_this;
}
void GetResultReplyMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResultReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResultReplyMsg& GetResultReplyMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResultReplyMsg_master_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetResultReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:mapreduce.GetResultReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArena() == nullptr && reply_ != nullptr) {
    delete reply_;
  }
  reply_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultReplyMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mapreduce.MasterReplyMsg reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_results();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mapreduce.GetResultReplyMsg.results"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResultReplyMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mapreduce.GetResultReplyMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::reply(this), target, stream);
  }

  // repeated string results = 2;
  for (int i = 0, n = this->_internal_results_size(); i < n; i++) {
    const auto& s = this->_internal_results(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mapreduce.GetResultReplyMsg.results");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mapreduce.GetResultReplyMsg)
  return target;
}

size_t GetResultReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mapreduce.GetResultReplyMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string results = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(results_.size());
  for (int i = 0, n = results_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      results_.Get(i));
  }

  // .mapreduce.MasterReplyMsg reply = 1;
  if (this->has_reply()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResultReplyMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mapreduce.GetResultReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResultReplyMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResultReplyMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mapreduce.GetResultReplyMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mapreduce.GetResultReplyMsg)
    MergeFrom(*source);
  }
}

void GetResultReplyMsg::MergeFrom(const GetResultReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mapreduce.GetResultReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_reply()) {
    _internal_mutable_reply()->::mapreduce::MasterReplyMsg::MergeFrom(from._internal_reply());
  }
}

void GetResultReplyMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mapreduce.GetResultReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResultReplyMsg::CopyFrom(const GetResultReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mapreduce.GetResultReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultReplyMsg::IsInitialized() const {
  return true;
}

void GetResultReplyMsg::InternalSwap(GetResultReplyMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
  swap(reply_, other->reply_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultReplyMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MasterService::~MasterService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* MasterService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_master_5fservice_2eproto);
  return file_level_service_descriptors_master_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* MasterService::GetDescriptor() {
  return descriptor();
}

void MasterService::Register(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::mapreduce::RegisterMsg*,
                         ::mapreduce::RegisterReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Register() not implemented.");
  done->Run();
}

void MasterService::Launch(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::mapreduce::JobMsg*,
                         ::mapreduce::LaunchReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Launch() not implemented.");
  done->Run();
}

void MasterService::CompleteMap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::mapreduce::MapResultMsg*,
                         ::mapreduce::MasterReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CompleteMap() not implemented.");
  done->Run();
}

void MasterService::CompleteReduce(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::mapreduce::ReduceResultMsg*,
                         ::mapreduce::MasterReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CompleteReduce() not implemented.");
  done->Run();
}

void MasterService::GetResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::mapreduce::GetResultMsg*,
                         ::mapreduce::GetResultReplyMsg*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetResult() not implemented.");
  done->Run();
}

void MasterService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_master_5fservice_2eproto[0]);
  switch(method->index()) {
    case 0:
      Register(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::mapreduce::RegisterMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::mapreduce::RegisterReplyMsg*>(
                 response),
             done);
      break;
    case 1:
      Launch(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::mapreduce::JobMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::mapreduce::LaunchReplyMsg*>(
                 response),
             done);
      break;
    case 2:
      CompleteMap(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::mapreduce::MapResultMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::mapreduce::MasterReplyMsg*>(
                 response),
             done);
      break;
    case 3:
      CompleteReduce(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::mapreduce::ReduceResultMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::mapreduce::MasterReplyMsg*>(
                 response),
             done);
      break;
    case 4:
      GetResult(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::mapreduce::GetResultMsg*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::mapreduce::GetResultReplyMsg*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& MasterService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::mapreduce::RegisterMsg::default_instance();
    case 1:
      return ::mapreduce::JobMsg::default_instance();
    case 2:
      return ::mapreduce::MapResultMsg::default_instance();
    case 3:
      return ::mapreduce::ReduceResultMsg::default_instance();
    case 4:
      return ::mapreduce::GetResultMsg::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& MasterService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::mapreduce::RegisterReplyMsg::default_instance();
    case 1:
      return ::mapreduce::LaunchReplyMsg::default_instance();
    case 2:
      return ::mapreduce::MasterReplyMsg::default_instance();
    case 3:
      return ::mapreduce::MasterReplyMsg::default_instance();
    case 4:
      return ::mapreduce::GetResultReplyMsg::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MasterService_Stub::MasterService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MasterService_Stub::MasterService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
MasterService_Stub::~MasterService_Stub() {
  if (owns_channel_) delete channel_;
}

void MasterService_Stub::Register(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::mapreduce::RegisterMsg* request,
                              ::mapreduce::RegisterReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void MasterService_Stub::Launch(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::mapreduce::JobMsg* request,
                              ::mapreduce::LaunchReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void MasterService_Stub::CompleteMap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::mapreduce::MapResultMsg* request,
                              ::mapreduce::MasterReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void MasterService_Stub::CompleteReduce(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::mapreduce::ReduceResultMsg* request,
                              ::mapreduce::MasterReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void MasterService_Stub::GetResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::mapreduce::GetResultMsg* request,
                              ::mapreduce::GetResultReplyMsg* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mapreduce
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mapreduce::MasterReplyMsg* Arena::CreateMaybeMessage< ::mapreduce::MasterReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::MasterReplyMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::RegisterMsg* Arena::CreateMaybeMessage< ::mapreduce::RegisterMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::RegisterMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::RegisterReplyMsg* Arena::CreateMaybeMessage< ::mapreduce::RegisterReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::RegisterReplyMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::JobMsg_KV* Arena::CreateMaybeMessage< ::mapreduce::JobMsg_KV >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::JobMsg_KV >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::JobMsg* Arena::CreateMaybeMessage< ::mapreduce::JobMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::JobMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::LaunchReplyMsg* Arena::CreateMaybeMessage< ::mapreduce::LaunchReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::LaunchReplyMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::MapResultMsg_KV* Arena::CreateMaybeMessage< ::mapreduce::MapResultMsg_KV >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::MapResultMsg_KV >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::MapResultMsg* Arena::CreateMaybeMessage< ::mapreduce::MapResultMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::MapResultMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::ReduceResultMsg* Arena::CreateMaybeMessage< ::mapreduce::ReduceResultMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::ReduceResultMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::GetResultMsg* Arena::CreateMaybeMessage< ::mapreduce::GetResultMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::GetResultMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::mapreduce::GetResultReplyMsg* Arena::CreateMaybeMessage< ::mapreduce::GetResultReplyMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mapreduce::GetResultReplyMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
