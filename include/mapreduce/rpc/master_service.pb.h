// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master_service.proto

#ifndef PROTOBUF_master_5fservice_2eproto__INCLUDED
#define PROTOBUF_master_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "state.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_master_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMasterReplyMsgImpl();
void InitDefaultsMasterReplyMsg();
void InitDefaultsRegisterMsgImpl();
void InitDefaultsRegisterMsg();
void InitDefaultsRegisterReplyMsgImpl();
void InitDefaultsRegisterReplyMsg();
void InitDefaultsJobMsg_KVImpl();
void InitDefaultsJobMsg_KV();
void InitDefaultsJobMsgImpl();
void InitDefaultsJobMsg();
void InitDefaultsLaunchReplyMsgImpl();
void InitDefaultsLaunchReplyMsg();
void InitDefaultsMapResultMsg_KVImpl();
void InitDefaultsMapResultMsg_KV();
void InitDefaultsMapResultMsgImpl();
void InitDefaultsMapResultMsg();
void InitDefaultsReduceResultMsgImpl();
void InitDefaultsReduceResultMsg();
void InitDefaultsGetResultMsgImpl();
void InitDefaultsGetResultMsg();
void InitDefaultsGetResultReplyMsgImpl();
void InitDefaultsGetResultReplyMsg();
inline void InitDefaults() {
  InitDefaultsMasterReplyMsg();
  InitDefaultsRegisterMsg();
  InitDefaultsRegisterReplyMsg();
  InitDefaultsJobMsg_KV();
  InitDefaultsJobMsg();
  InitDefaultsLaunchReplyMsg();
  InitDefaultsMapResultMsg_KV();
  InitDefaultsMapResultMsg();
  InitDefaultsReduceResultMsg();
  InitDefaultsGetResultMsg();
  InitDefaultsGetResultReplyMsg();
}
}  // namespace protobuf_master_5fservice_2eproto
namespace mapreduce {
class GetResultMsg;
class GetResultMsgDefaultTypeInternal;
extern GetResultMsgDefaultTypeInternal _GetResultMsg_default_instance_;
class GetResultReplyMsg;
class GetResultReplyMsgDefaultTypeInternal;
extern GetResultReplyMsgDefaultTypeInternal _GetResultReplyMsg_default_instance_;
class JobMsg;
class JobMsgDefaultTypeInternal;
extern JobMsgDefaultTypeInternal _JobMsg_default_instance_;
class JobMsg_KV;
class JobMsg_KVDefaultTypeInternal;
extern JobMsg_KVDefaultTypeInternal _JobMsg_KV_default_instance_;
class LaunchReplyMsg;
class LaunchReplyMsgDefaultTypeInternal;
extern LaunchReplyMsgDefaultTypeInternal _LaunchReplyMsg_default_instance_;
class MapResultMsg;
class MapResultMsgDefaultTypeInternal;
extern MapResultMsgDefaultTypeInternal _MapResultMsg_default_instance_;
class MapResultMsg_KV;
class MapResultMsg_KVDefaultTypeInternal;
extern MapResultMsg_KVDefaultTypeInternal _MapResultMsg_KV_default_instance_;
class MasterReplyMsg;
class MasterReplyMsgDefaultTypeInternal;
extern MasterReplyMsgDefaultTypeInternal _MasterReplyMsg_default_instance_;
class ReduceResultMsg;
class ReduceResultMsgDefaultTypeInternal;
extern ReduceResultMsgDefaultTypeInternal _ReduceResultMsg_default_instance_;
class RegisterMsg;
class RegisterMsgDefaultTypeInternal;
extern RegisterMsgDefaultTypeInternal _RegisterMsg_default_instance_;
class RegisterReplyMsg;
class RegisterReplyMsgDefaultTypeInternal;
extern RegisterReplyMsgDefaultTypeInternal _RegisterReplyMsg_default_instance_;
}  // namespace mapreduce
namespace mapreduce {

// ===================================================================

class MasterReplyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.MasterReplyMsg) */ {
 public:
  MasterReplyMsg();
  virtual ~MasterReplyMsg();

  MasterReplyMsg(const MasterReplyMsg& from);

  inline MasterReplyMsg& operator=(const MasterReplyMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MasterReplyMsg(MasterReplyMsg&& from) noexcept
    : MasterReplyMsg() {
    *this = ::std::move(from);
  }

  inline MasterReplyMsg& operator=(MasterReplyMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MasterReplyMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MasterReplyMsg* internal_default_instance() {
    return reinterpret_cast<const MasterReplyMsg*>(
               &_MasterReplyMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MasterReplyMsg* other);
  friend void swap(MasterReplyMsg& a, MasterReplyMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MasterReplyMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MasterReplyMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MasterReplyMsg& from);
  void MergeFrom(const MasterReplyMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MasterReplyMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:mapreduce.MasterReplyMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  bool ok_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsMasterReplyMsgImpl();
};
// -------------------------------------------------------------------

class RegisterMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.RegisterMsg) */ {
 public:
  RegisterMsg();
  virtual ~RegisterMsg();

  RegisterMsg(const RegisterMsg& from);

  inline RegisterMsg& operator=(const RegisterMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterMsg(RegisterMsg&& from) noexcept
    : RegisterMsg() {
    *this = ::std::move(from);
  }

  inline RegisterMsg& operator=(RegisterMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterMsg* internal_default_instance() {
    return reinterpret_cast<const RegisterMsg*>(
               &_RegisterMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RegisterMsg* other);
  friend void swap(RegisterMsg& a, RegisterMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterMsg& from);
  void MergeFrom(const RegisterMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mapreduce.RegisterMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 port_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsRegisterMsgImpl();
};
// -------------------------------------------------------------------

class RegisterReplyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.RegisterReplyMsg) */ {
 public:
  RegisterReplyMsg();
  virtual ~RegisterReplyMsg();

  RegisterReplyMsg(const RegisterReplyMsg& from);

  inline RegisterReplyMsg& operator=(const RegisterReplyMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterReplyMsg(RegisterReplyMsg&& from) noexcept
    : RegisterReplyMsg() {
    *this = ::std::move(from);
  }

  inline RegisterReplyMsg& operator=(RegisterReplyMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterReplyMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterReplyMsg* internal_default_instance() {
    return reinterpret_cast<const RegisterReplyMsg*>(
               &_RegisterReplyMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RegisterReplyMsg* other);
  friend void swap(RegisterReplyMsg& a, RegisterReplyMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterReplyMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterReplyMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterReplyMsg& from);
  void MergeFrom(const RegisterReplyMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterReplyMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mapreduce.MasterReplyMsg reply = 1;
  bool has_reply() const;
  void clear_reply();
  static const int kReplyFieldNumber = 1;
  const ::mapreduce::MasterReplyMsg& reply() const;
  ::mapreduce::MasterReplyMsg* release_reply();
  ::mapreduce::MasterReplyMsg* mutable_reply();
  void set_allocated_reply(::mapreduce::MasterReplyMsg* reply);

  // uint32 worker_id = 2;
  void clear_worker_id();
  static const int kWorkerIdFieldNumber = 2;
  ::google::protobuf::uint32 worker_id() const;
  void set_worker_id(::google::protobuf::uint32 value);

  // uint32 master_id = 3;
  void clear_master_id();
  static const int kMasterIdFieldNumber = 3;
  ::google::protobuf::uint32 master_id() const;
  void set_master_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mapreduce.RegisterReplyMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mapreduce::MasterReplyMsg* reply_;
  ::google::protobuf::uint32 worker_id_;
  ::google::protobuf::uint32 master_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsRegisterReplyMsgImpl();
};
// -------------------------------------------------------------------

class JobMsg_KV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.JobMsg.KV) */ {
 public:
  JobMsg_KV();
  virtual ~JobMsg_KV();

  JobMsg_KV(const JobMsg_KV& from);

  inline JobMsg_KV& operator=(const JobMsg_KV& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobMsg_KV(JobMsg_KV&& from) noexcept
    : JobMsg_KV() {
    *this = ::std::move(from);
  }

  inline JobMsg_KV& operator=(JobMsg_KV&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobMsg_KV& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobMsg_KV* internal_default_instance() {
    return reinterpret_cast<const JobMsg_KV*>(
               &_JobMsg_KV_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(JobMsg_KV* other);
  friend void swap(JobMsg_KV& a, JobMsg_KV& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobMsg_KV* New() const PROTOBUF_FINAL { return New(NULL); }

  JobMsg_KV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JobMsg_KV& from);
  void MergeFrom(const JobMsg_KV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JobMsg_KV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:mapreduce.JobMsg.KV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsJobMsg_KVImpl();
};
// -------------------------------------------------------------------

class JobMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.JobMsg) */ {
 public:
  JobMsg();
  virtual ~JobMsg();

  JobMsg(const JobMsg& from);

  inline JobMsg& operator=(const JobMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobMsg(JobMsg&& from) noexcept
    : JobMsg() {
    *this = ::std::move(from);
  }

  inline JobMsg& operator=(JobMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobMsg* internal_default_instance() {
    return reinterpret_cast<const JobMsg*>(
               &_JobMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(JobMsg* other);
  friend void swap(JobMsg& a, JobMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  JobMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JobMsg& from);
  void MergeFrom(const JobMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JobMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef JobMsg_KV KV;

  // accessors -------------------------------------------------------

  // repeated .mapreduce.JobMsg.KV kvs = 5;
  int kvs_size() const;
  void clear_kvs();
  static const int kKvsFieldNumber = 5;
  const ::mapreduce::JobMsg_KV& kvs(int index) const;
  ::mapreduce::JobMsg_KV* mutable_kvs(int index);
  ::mapreduce::JobMsg_KV* add_kvs();
  ::google::protobuf::RepeatedPtrField< ::mapreduce::JobMsg_KV >*
      mutable_kvs();
  const ::google::protobuf::RepeatedPtrField< ::mapreduce::JobMsg_KV >&
      kvs() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // uint32 mapper_num = 3;
  void clear_mapper_num();
  static const int kMapperNumFieldNumber = 3;
  ::google::protobuf::uint32 mapper_num() const;
  void set_mapper_num(::google::protobuf::uint32 value);

  // uint32 reducer_num = 4;
  void clear_reducer_num();
  static const int kReducerNumFieldNumber = 4;
  ::google::protobuf::uint32 reducer_num() const;
  void set_reducer_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mapreduce.JobMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mapreduce::JobMsg_KV > kvs_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::uint32 mapper_num_;
  ::google::protobuf::uint32 reducer_num_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsJobMsgImpl();
};
// -------------------------------------------------------------------

class LaunchReplyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.LaunchReplyMsg) */ {
 public:
  LaunchReplyMsg();
  virtual ~LaunchReplyMsg();

  LaunchReplyMsg(const LaunchReplyMsg& from);

  inline LaunchReplyMsg& operator=(const LaunchReplyMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaunchReplyMsg(LaunchReplyMsg&& from) noexcept
    : LaunchReplyMsg() {
    *this = ::std::move(from);
  }

  inline LaunchReplyMsg& operator=(LaunchReplyMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LaunchReplyMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaunchReplyMsg* internal_default_instance() {
    return reinterpret_cast<const LaunchReplyMsg*>(
               &_LaunchReplyMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(LaunchReplyMsg* other);
  friend void swap(LaunchReplyMsg& a, LaunchReplyMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaunchReplyMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  LaunchReplyMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LaunchReplyMsg& from);
  void MergeFrom(const LaunchReplyMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LaunchReplyMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mapreduce.MasterReplyMsg reply = 1;
  bool has_reply() const;
  void clear_reply();
  static const int kReplyFieldNumber = 1;
  const ::mapreduce::MasterReplyMsg& reply() const;
  ::mapreduce::MasterReplyMsg* release_reply();
  ::mapreduce::MasterReplyMsg* mutable_reply();
  void set_allocated_reply(::mapreduce::MasterReplyMsg* reply);

  // uint32 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mapreduce.LaunchReplyMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mapreduce::MasterReplyMsg* reply_;
  ::google::protobuf::uint32 job_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsLaunchReplyMsgImpl();
};
// -------------------------------------------------------------------

class MapResultMsg_KV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.MapResultMsg.KV) */ {
 public:
  MapResultMsg_KV();
  virtual ~MapResultMsg_KV();

  MapResultMsg_KV(const MapResultMsg_KV& from);

  inline MapResultMsg_KV& operator=(const MapResultMsg_KV& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapResultMsg_KV(MapResultMsg_KV&& from) noexcept
    : MapResultMsg_KV() {
    *this = ::std::move(from);
  }

  inline MapResultMsg_KV& operator=(MapResultMsg_KV&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapResultMsg_KV& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapResultMsg_KV* internal_default_instance() {
    return reinterpret_cast<const MapResultMsg_KV*>(
               &_MapResultMsg_KV_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MapResultMsg_KV* other);
  friend void swap(MapResultMsg_KV& a, MapResultMsg_KV& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapResultMsg_KV* New() const PROTOBUF_FINAL { return New(NULL); }

  MapResultMsg_KV* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapResultMsg_KV& from);
  void MergeFrom(const MapResultMsg_KV& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapResultMsg_KV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:mapreduce.MapResultMsg.KV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsMapResultMsg_KVImpl();
};
// -------------------------------------------------------------------

class MapResultMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.MapResultMsg) */ {
 public:
  MapResultMsg();
  virtual ~MapResultMsg();

  MapResultMsg(const MapResultMsg& from);

  inline MapResultMsg& operator=(const MapResultMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapResultMsg(MapResultMsg&& from) noexcept
    : MapResultMsg() {
    *this = ::std::move(from);
  }

  inline MapResultMsg& operator=(MapResultMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapResultMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapResultMsg* internal_default_instance() {
    return reinterpret_cast<const MapResultMsg*>(
               &_MapResultMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MapResultMsg* other);
  friend void swap(MapResultMsg& a, MapResultMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapResultMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MapResultMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapResultMsg& from);
  void MergeFrom(const MapResultMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapResultMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MapResultMsg_KV KV;

  // accessors -------------------------------------------------------

  // repeated .mapreduce.MapResultMsg.KV map_result = 5;
  int map_result_size() const;
  void clear_map_result();
  static const int kMapResultFieldNumber = 5;
  const ::mapreduce::MapResultMsg_KV& map_result(int index) const;
  ::mapreduce::MapResultMsg_KV* mutable_map_result(int index);
  ::mapreduce::MapResultMsg_KV* add_map_result();
  ::google::protobuf::RepeatedPtrField< ::mapreduce::MapResultMsg_KV >*
      mutable_map_result();
  const ::google::protobuf::RepeatedPtrField< ::mapreduce::MapResultMsg_KV >&
      map_result() const;

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // uint32 subjob_id = 2;
  void clear_subjob_id();
  static const int kSubjobIdFieldNumber = 2;
  ::google::protobuf::uint32 subjob_id() const;
  void set_subjob_id(::google::protobuf::uint32 value);

  // uint32 worker_id = 3;
  void clear_worker_id();
  static const int kWorkerIdFieldNumber = 3;
  ::google::protobuf::uint32 worker_id() const;
  void set_worker_id(::google::protobuf::uint32 value);

  // .mapreduce.WorkerState state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::mapreduce::WorkerState state() const;
  void set_state(::mapreduce::WorkerState value);

  // @@protoc_insertion_point(class_scope:mapreduce.MapResultMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mapreduce::MapResultMsg_KV > map_result_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::uint32 subjob_id_;
  ::google::protobuf::uint32 worker_id_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsMapResultMsgImpl();
};
// -------------------------------------------------------------------

class ReduceResultMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.ReduceResultMsg) */ {
 public:
  ReduceResultMsg();
  virtual ~ReduceResultMsg();

  ReduceResultMsg(const ReduceResultMsg& from);

  inline ReduceResultMsg& operator=(const ReduceResultMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReduceResultMsg(ReduceResultMsg&& from) noexcept
    : ReduceResultMsg() {
    *this = ::std::move(from);
  }

  inline ReduceResultMsg& operator=(ReduceResultMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReduceResultMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReduceResultMsg* internal_default_instance() {
    return reinterpret_cast<const ReduceResultMsg*>(
               &_ReduceResultMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ReduceResultMsg* other);
  friend void swap(ReduceResultMsg& a, ReduceResultMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReduceResultMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ReduceResultMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReduceResultMsg& from);
  void MergeFrom(const ReduceResultMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReduceResultMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string reduce_result = 5;
  int reduce_result_size() const;
  void clear_reduce_result();
  static const int kReduceResultFieldNumber = 5;
  const ::std::string& reduce_result(int index) const;
  ::std::string* mutable_reduce_result(int index);
  void set_reduce_result(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_reduce_result(int index, ::std::string&& value);
  #endif
  void set_reduce_result(int index, const char* value);
  void set_reduce_result(int index, const char* value, size_t size);
  ::std::string* add_reduce_result();
  void add_reduce_result(const ::std::string& value);
  #if LANG_CXX11
  void add_reduce_result(::std::string&& value);
  #endif
  void add_reduce_result(const char* value);
  void add_reduce_result(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& reduce_result() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_reduce_result();

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // uint32 subjob_id = 2;
  void clear_subjob_id();
  static const int kSubjobIdFieldNumber = 2;
  ::google::protobuf::uint32 subjob_id() const;
  void set_subjob_id(::google::protobuf::uint32 value);

  // uint32 worker_id = 3;
  void clear_worker_id();
  static const int kWorkerIdFieldNumber = 3;
  ::google::protobuf::uint32 worker_id() const;
  void set_worker_id(::google::protobuf::uint32 value);

  // .mapreduce.WorkerState state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::mapreduce::WorkerState state() const;
  void set_state(::mapreduce::WorkerState value);

  // @@protoc_insertion_point(class_scope:mapreduce.ReduceResultMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> reduce_result_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::uint32 subjob_id_;
  ::google::protobuf::uint32 worker_id_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsReduceResultMsgImpl();
};
// -------------------------------------------------------------------

class GetResultMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.GetResultMsg) */ {
 public:
  GetResultMsg();
  virtual ~GetResultMsg();

  GetResultMsg(const GetResultMsg& from);

  inline GetResultMsg& operator=(const GetResultMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetResultMsg(GetResultMsg&& from) noexcept
    : GetResultMsg() {
    *this = ::std::move(from);
  }

  inline GetResultMsg& operator=(GetResultMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResultMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetResultMsg* internal_default_instance() {
    return reinterpret_cast<const GetResultMsg*>(
               &_GetResultMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetResultMsg* other);
  friend void swap(GetResultMsg& a, GetResultMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetResultMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  GetResultMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetResultMsg& from);
  void MergeFrom(const GetResultMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetResultMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mapreduce.GetResultMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 job_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsGetResultMsgImpl();
};
// -------------------------------------------------------------------

class GetResultReplyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mapreduce.GetResultReplyMsg) */ {
 public:
  GetResultReplyMsg();
  virtual ~GetResultReplyMsg();

  GetResultReplyMsg(const GetResultReplyMsg& from);

  inline GetResultReplyMsg& operator=(const GetResultReplyMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetResultReplyMsg(GetResultReplyMsg&& from) noexcept
    : GetResultReplyMsg() {
    *this = ::std::move(from);
  }

  inline GetResultReplyMsg& operator=(GetResultReplyMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResultReplyMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetResultReplyMsg* internal_default_instance() {
    return reinterpret_cast<const GetResultReplyMsg*>(
               &_GetResultReplyMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetResultReplyMsg* other);
  friend void swap(GetResultReplyMsg& a, GetResultReplyMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetResultReplyMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  GetResultReplyMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetResultReplyMsg& from);
  void MergeFrom(const GetResultReplyMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetResultReplyMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  const ::std::string& results(int index) const;
  ::std::string* mutable_results(int index);
  void set_results(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_results(int index, ::std::string&& value);
  #endif
  void set_results(int index, const char* value);
  void set_results(int index, const char* value, size_t size);
  ::std::string* add_results();
  void add_results(const ::std::string& value);
  #if LANG_CXX11
  void add_results(::std::string&& value);
  #endif
  void add_results(const char* value);
  void add_results(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& results() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_results();

  // .mapreduce.MasterReplyMsg reply = 1;
  bool has_reply() const;
  void clear_reply();
  static const int kReplyFieldNumber = 1;
  const ::mapreduce::MasterReplyMsg& reply() const;
  ::mapreduce::MasterReplyMsg* release_reply();
  ::mapreduce::MasterReplyMsg* mutable_reply();
  void set_allocated_reply(::mapreduce::MasterReplyMsg* reply);

  // @@protoc_insertion_point(class_scope:mapreduce.GetResultReplyMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> results_;
  ::mapreduce::MasterReplyMsg* reply_;
  mutable int _cached_size_;
  friend struct ::protobuf_master_5fservice_2eproto::TableStruct;
  friend void ::protobuf_master_5fservice_2eproto::InitDefaultsGetResultReplyMsgImpl();
};
// ===================================================================

class MasterService_Stub;

class MasterService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline MasterService() {};
 public:
  virtual ~MasterService();

  typedef MasterService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Register(::google::protobuf::RpcController* controller,
                       const ::mapreduce::RegisterMsg* request,
                       ::mapreduce::RegisterReplyMsg* response,
                       ::google::protobuf::Closure* done);
  virtual void Launch(::google::protobuf::RpcController* controller,
                       const ::mapreduce::JobMsg* request,
                       ::mapreduce::LaunchReplyMsg* response,
                       ::google::protobuf::Closure* done);
  virtual void CompleteMap(::google::protobuf::RpcController* controller,
                       const ::mapreduce::MapResultMsg* request,
                       ::mapreduce::MasterReplyMsg* response,
                       ::google::protobuf::Closure* done);
  virtual void CompleteReduce(::google::protobuf::RpcController* controller,
                       const ::mapreduce::ReduceResultMsg* request,
                       ::mapreduce::MasterReplyMsg* response,
                       ::google::protobuf::Closure* done);
  virtual void GetResult(::google::protobuf::RpcController* controller,
                       const ::mapreduce::GetResultMsg* request,
                       ::mapreduce::GetResultReplyMsg* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(MasterService);
};

class MasterService_Stub : public MasterService {
 public:
  MasterService_Stub(::google::protobuf::RpcChannel* channel);
  MasterService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~MasterService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements MasterService ------------------------------------------

  void Register(::google::protobuf::RpcController* controller,
                       const ::mapreduce::RegisterMsg* request,
                       ::mapreduce::RegisterReplyMsg* response,
                       ::google::protobuf::Closure* done);
  void Launch(::google::protobuf::RpcController* controller,
                       const ::mapreduce::JobMsg* request,
                       ::mapreduce::LaunchReplyMsg* response,
                       ::google::protobuf::Closure* done);
  void CompleteMap(::google::protobuf::RpcController* controller,
                       const ::mapreduce::MapResultMsg* request,
                       ::mapreduce::MasterReplyMsg* response,
                       ::google::protobuf::Closure* done);
  void CompleteReduce(::google::protobuf::RpcController* controller,
                       const ::mapreduce::ReduceResultMsg* request,
                       ::mapreduce::MasterReplyMsg* response,
                       ::google::protobuf::Closure* done);
  void GetResult(::google::protobuf::RpcController* controller,
                       const ::mapreduce::GetResultMsg* request,
                       ::mapreduce::GetResultReplyMsg* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(MasterService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MasterReplyMsg

// bool ok = 1;
inline void MasterReplyMsg::clear_ok() {
  ok_ = false;
}
inline bool MasterReplyMsg::ok() const {
  // @@protoc_insertion_point(field_get:mapreduce.MasterReplyMsg.ok)
  return ok_;
}
inline void MasterReplyMsg::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.MasterReplyMsg.ok)
}

// string msg = 2;
inline void MasterReplyMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MasterReplyMsg::msg() const {
  // @@protoc_insertion_point(field_get:mapreduce.MasterReplyMsg.msg)
  return msg_.GetNoArena();
}
inline void MasterReplyMsg::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.MasterReplyMsg.msg)
}
#if LANG_CXX11
inline void MasterReplyMsg::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.MasterReplyMsg.msg)
}
#endif
inline void MasterReplyMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.MasterReplyMsg.msg)
}
inline void MasterReplyMsg::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.MasterReplyMsg.msg)
}
inline ::std::string* MasterReplyMsg::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.MasterReplyMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MasterReplyMsg::release_msg() {
  // @@protoc_insertion_point(field_release:mapreduce.MasterReplyMsg.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MasterReplyMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.MasterReplyMsg.msg)
}

// -------------------------------------------------------------------

// RegisterMsg

// string name = 1;
inline void RegisterMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterMsg::name() const {
  // @@protoc_insertion_point(field_get:mapreduce.RegisterMsg.name)
  return name_.GetNoArena();
}
inline void RegisterMsg::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.RegisterMsg.name)
}
#if LANG_CXX11
inline void RegisterMsg::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.RegisterMsg.name)
}
#endif
inline void RegisterMsg::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.RegisterMsg.name)
}
inline void RegisterMsg::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.RegisterMsg.name)
}
inline ::std::string* RegisterMsg::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.RegisterMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterMsg::release_name() {
  // @@protoc_insertion_point(field_release:mapreduce.RegisterMsg.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.RegisterMsg.name)
}

// uint32 port = 2;
inline void RegisterMsg::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 RegisterMsg::port() const {
  // @@protoc_insertion_point(field_get:mapreduce.RegisterMsg.port)
  return port_;
}
inline void RegisterMsg::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.RegisterMsg.port)
}

// -------------------------------------------------------------------

// RegisterReplyMsg

// .mapreduce.MasterReplyMsg reply = 1;
inline bool RegisterReplyMsg::has_reply() const {
  return this != internal_default_instance() && reply_ != NULL;
}
inline void RegisterReplyMsg::clear_reply() {
  if (GetArenaNoVirtual() == NULL && reply_ != NULL) {
    delete reply_;
  }
  reply_ = NULL;
}
inline const ::mapreduce::MasterReplyMsg& RegisterReplyMsg::reply() const {
  const ::mapreduce::MasterReplyMsg* p = reply_;
  // @@protoc_insertion_point(field_get:mapreduce.RegisterReplyMsg.reply)
  return p != NULL ? *p : *reinterpret_cast<const ::mapreduce::MasterReplyMsg*>(
      &::mapreduce::_MasterReplyMsg_default_instance_);
}
inline ::mapreduce::MasterReplyMsg* RegisterReplyMsg::release_reply() {
  // @@protoc_insertion_point(field_release:mapreduce.RegisterReplyMsg.reply)
  
  ::mapreduce::MasterReplyMsg* temp = reply_;
  reply_ = NULL;
  return temp;
}
inline ::mapreduce::MasterReplyMsg* RegisterReplyMsg::mutable_reply() {
  
  if (reply_ == NULL) {
    reply_ = new ::mapreduce::MasterReplyMsg;
  }
  // @@protoc_insertion_point(field_mutable:mapreduce.RegisterReplyMsg.reply)
  return reply_;
}
inline void RegisterReplyMsg::set_allocated_reply(::mapreduce::MasterReplyMsg* reply) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reply_;
  }
  if (reply) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reply = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reply, submessage_arena);
    }
    
  } else {
    
  }
  reply_ = reply;
  // @@protoc_insertion_point(field_set_allocated:mapreduce.RegisterReplyMsg.reply)
}

// uint32 worker_id = 2;
inline void RegisterReplyMsg::clear_worker_id() {
  worker_id_ = 0u;
}
inline ::google::protobuf::uint32 RegisterReplyMsg::worker_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.RegisterReplyMsg.worker_id)
  return worker_id_;
}
inline void RegisterReplyMsg::set_worker_id(::google::protobuf::uint32 value) {
  
  worker_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.RegisterReplyMsg.worker_id)
}

// uint32 master_id = 3;
inline void RegisterReplyMsg::clear_master_id() {
  master_id_ = 0u;
}
inline ::google::protobuf::uint32 RegisterReplyMsg::master_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.RegisterReplyMsg.master_id)
  return master_id_;
}
inline void RegisterReplyMsg::set_master_id(::google::protobuf::uint32 value) {
  
  master_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.RegisterReplyMsg.master_id)
}

// -------------------------------------------------------------------

// JobMsg_KV

// string key = 1;
inline void JobMsg_KV::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JobMsg_KV::key() const {
  // @@protoc_insertion_point(field_get:mapreduce.JobMsg.KV.key)
  return key_.GetNoArena();
}
inline void JobMsg_KV::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.JobMsg.KV.key)
}
#if LANG_CXX11
inline void JobMsg_KV::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.JobMsg.KV.key)
}
#endif
inline void JobMsg_KV::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.JobMsg.KV.key)
}
inline void JobMsg_KV::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.JobMsg.KV.key)
}
inline ::std::string* JobMsg_KV::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.JobMsg.KV.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobMsg_KV::release_key() {
  // @@protoc_insertion_point(field_release:mapreduce.JobMsg.KV.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobMsg_KV::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.JobMsg.KV.key)
}

// string value = 2;
inline void JobMsg_KV::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JobMsg_KV::value() const {
  // @@protoc_insertion_point(field_get:mapreduce.JobMsg.KV.value)
  return value_.GetNoArena();
}
inline void JobMsg_KV::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.JobMsg.KV.value)
}
#if LANG_CXX11
inline void JobMsg_KV::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.JobMsg.KV.value)
}
#endif
inline void JobMsg_KV::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.JobMsg.KV.value)
}
inline void JobMsg_KV::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.JobMsg.KV.value)
}
inline ::std::string* JobMsg_KV::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.JobMsg.KV.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobMsg_KV::release_value() {
  // @@protoc_insertion_point(field_release:mapreduce.JobMsg.KV.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobMsg_KV::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.JobMsg.KV.value)
}

// -------------------------------------------------------------------

// JobMsg

// string name = 1;
inline void JobMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JobMsg::name() const {
  // @@protoc_insertion_point(field_get:mapreduce.JobMsg.name)
  return name_.GetNoArena();
}
inline void JobMsg::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.JobMsg.name)
}
#if LANG_CXX11
inline void JobMsg::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.JobMsg.name)
}
#endif
inline void JobMsg::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.JobMsg.name)
}
inline void JobMsg::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.JobMsg.name)
}
inline ::std::string* JobMsg::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.JobMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobMsg::release_name() {
  // @@protoc_insertion_point(field_release:mapreduce.JobMsg.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.JobMsg.name)
}

// string type = 2;
inline void JobMsg::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JobMsg::type() const {
  // @@protoc_insertion_point(field_get:mapreduce.JobMsg.type)
  return type_.GetNoArena();
}
inline void JobMsg::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.JobMsg.type)
}
#if LANG_CXX11
inline void JobMsg::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.JobMsg.type)
}
#endif
inline void JobMsg::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.JobMsg.type)
}
inline void JobMsg::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.JobMsg.type)
}
inline ::std::string* JobMsg::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.JobMsg.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobMsg::release_type() {
  // @@protoc_insertion_point(field_release:mapreduce.JobMsg.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobMsg::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.JobMsg.type)
}

// uint32 mapper_num = 3;
inline void JobMsg::clear_mapper_num() {
  mapper_num_ = 0u;
}
inline ::google::protobuf::uint32 JobMsg::mapper_num() const {
  // @@protoc_insertion_point(field_get:mapreduce.JobMsg.mapper_num)
  return mapper_num_;
}
inline void JobMsg::set_mapper_num(::google::protobuf::uint32 value) {
  
  mapper_num_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.JobMsg.mapper_num)
}

// uint32 reducer_num = 4;
inline void JobMsg::clear_reducer_num() {
  reducer_num_ = 0u;
}
inline ::google::protobuf::uint32 JobMsg::reducer_num() const {
  // @@protoc_insertion_point(field_get:mapreduce.JobMsg.reducer_num)
  return reducer_num_;
}
inline void JobMsg::set_reducer_num(::google::protobuf::uint32 value) {
  
  reducer_num_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.JobMsg.reducer_num)
}

// repeated .mapreduce.JobMsg.KV kvs = 5;
inline int JobMsg::kvs_size() const {
  return kvs_.size();
}
inline void JobMsg::clear_kvs() {
  kvs_.Clear();
}
inline const ::mapreduce::JobMsg_KV& JobMsg::kvs(int index) const {
  // @@protoc_insertion_point(field_get:mapreduce.JobMsg.kvs)
  return kvs_.Get(index);
}
inline ::mapreduce::JobMsg_KV* JobMsg::mutable_kvs(int index) {
  // @@protoc_insertion_point(field_mutable:mapreduce.JobMsg.kvs)
  return kvs_.Mutable(index);
}
inline ::mapreduce::JobMsg_KV* JobMsg::add_kvs() {
  // @@protoc_insertion_point(field_add:mapreduce.JobMsg.kvs)
  return kvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mapreduce::JobMsg_KV >*
JobMsg::mutable_kvs() {
  // @@protoc_insertion_point(field_mutable_list:mapreduce.JobMsg.kvs)
  return &kvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mapreduce::JobMsg_KV >&
JobMsg::kvs() const {
  // @@protoc_insertion_point(field_list:mapreduce.JobMsg.kvs)
  return kvs_;
}

// -------------------------------------------------------------------

// LaunchReplyMsg

// .mapreduce.MasterReplyMsg reply = 1;
inline bool LaunchReplyMsg::has_reply() const {
  return this != internal_default_instance() && reply_ != NULL;
}
inline void LaunchReplyMsg::clear_reply() {
  if (GetArenaNoVirtual() == NULL && reply_ != NULL) {
    delete reply_;
  }
  reply_ = NULL;
}
inline const ::mapreduce::MasterReplyMsg& LaunchReplyMsg::reply() const {
  const ::mapreduce::MasterReplyMsg* p = reply_;
  // @@protoc_insertion_point(field_get:mapreduce.LaunchReplyMsg.reply)
  return p != NULL ? *p : *reinterpret_cast<const ::mapreduce::MasterReplyMsg*>(
      &::mapreduce::_MasterReplyMsg_default_instance_);
}
inline ::mapreduce::MasterReplyMsg* LaunchReplyMsg::release_reply() {
  // @@protoc_insertion_point(field_release:mapreduce.LaunchReplyMsg.reply)
  
  ::mapreduce::MasterReplyMsg* temp = reply_;
  reply_ = NULL;
  return temp;
}
inline ::mapreduce::MasterReplyMsg* LaunchReplyMsg::mutable_reply() {
  
  if (reply_ == NULL) {
    reply_ = new ::mapreduce::MasterReplyMsg;
  }
  // @@protoc_insertion_point(field_mutable:mapreduce.LaunchReplyMsg.reply)
  return reply_;
}
inline void LaunchReplyMsg::set_allocated_reply(::mapreduce::MasterReplyMsg* reply) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reply_;
  }
  if (reply) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reply = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reply, submessage_arena);
    }
    
  } else {
    
  }
  reply_ = reply;
  // @@protoc_insertion_point(field_set_allocated:mapreduce.LaunchReplyMsg.reply)
}

// uint32 job_id = 2;
inline void LaunchReplyMsg::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 LaunchReplyMsg::job_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.LaunchReplyMsg.job_id)
  return job_id_;
}
inline void LaunchReplyMsg::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.LaunchReplyMsg.job_id)
}

// -------------------------------------------------------------------

// MapResultMsg_KV

// string key = 1;
inline void MapResultMsg_KV::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapResultMsg_KV::key() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapResultMsg.KV.key)
  return key_.GetNoArena();
}
inline void MapResultMsg_KV::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.MapResultMsg.KV.key)
}
#if LANG_CXX11
inline void MapResultMsg_KV::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.MapResultMsg.KV.key)
}
#endif
inline void MapResultMsg_KV::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.MapResultMsg.KV.key)
}
inline void MapResultMsg_KV::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.MapResultMsg.KV.key)
}
inline ::std::string* MapResultMsg_KV::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.MapResultMsg.KV.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapResultMsg_KV::release_key() {
  // @@protoc_insertion_point(field_release:mapreduce.MapResultMsg.KV.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapResultMsg_KV::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.MapResultMsg.KV.key)
}

// string value = 2;
inline void MapResultMsg_KV::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapResultMsg_KV::value() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapResultMsg.KV.value)
  return value_.GetNoArena();
}
inline void MapResultMsg_KV::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mapreduce.MapResultMsg.KV.value)
}
#if LANG_CXX11
inline void MapResultMsg_KV::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mapreduce.MapResultMsg.KV.value)
}
#endif
inline void MapResultMsg_KV::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mapreduce.MapResultMsg.KV.value)
}
inline void MapResultMsg_KV::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mapreduce.MapResultMsg.KV.value)
}
inline ::std::string* MapResultMsg_KV::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mapreduce.MapResultMsg.KV.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapResultMsg_KV::release_value() {
  // @@protoc_insertion_point(field_release:mapreduce.MapResultMsg.KV.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapResultMsg_KV::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mapreduce.MapResultMsg.KV.value)
}

// -------------------------------------------------------------------

// MapResultMsg

// uint32 job_id = 1;
inline void MapResultMsg::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 MapResultMsg::job_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapResultMsg.job_id)
  return job_id_;
}
inline void MapResultMsg::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.MapResultMsg.job_id)
}

// uint32 subjob_id = 2;
inline void MapResultMsg::clear_subjob_id() {
  subjob_id_ = 0u;
}
inline ::google::protobuf::uint32 MapResultMsg::subjob_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapResultMsg.subjob_id)
  return subjob_id_;
}
inline void MapResultMsg::set_subjob_id(::google::protobuf::uint32 value) {
  
  subjob_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.MapResultMsg.subjob_id)
}

// uint32 worker_id = 3;
inline void MapResultMsg::clear_worker_id() {
  worker_id_ = 0u;
}
inline ::google::protobuf::uint32 MapResultMsg::worker_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapResultMsg.worker_id)
  return worker_id_;
}
inline void MapResultMsg::set_worker_id(::google::protobuf::uint32 value) {
  
  worker_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.MapResultMsg.worker_id)
}

// .mapreduce.WorkerState state = 4;
inline void MapResultMsg::clear_state() {
  state_ = 0;
}
inline ::mapreduce::WorkerState MapResultMsg::state() const {
  // @@protoc_insertion_point(field_get:mapreduce.MapResultMsg.state)
  return static_cast< ::mapreduce::WorkerState >(state_);
}
inline void MapResultMsg::set_state(::mapreduce::WorkerState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.MapResultMsg.state)
}

// repeated .mapreduce.MapResultMsg.KV map_result = 5;
inline int MapResultMsg::map_result_size() const {
  return map_result_.size();
}
inline void MapResultMsg::clear_map_result() {
  map_result_.Clear();
}
inline const ::mapreduce::MapResultMsg_KV& MapResultMsg::map_result(int index) const {
  // @@protoc_insertion_point(field_get:mapreduce.MapResultMsg.map_result)
  return map_result_.Get(index);
}
inline ::mapreduce::MapResultMsg_KV* MapResultMsg::mutable_map_result(int index) {
  // @@protoc_insertion_point(field_mutable:mapreduce.MapResultMsg.map_result)
  return map_result_.Mutable(index);
}
inline ::mapreduce::MapResultMsg_KV* MapResultMsg::add_map_result() {
  // @@protoc_insertion_point(field_add:mapreduce.MapResultMsg.map_result)
  return map_result_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mapreduce::MapResultMsg_KV >*
MapResultMsg::mutable_map_result() {
  // @@protoc_insertion_point(field_mutable_list:mapreduce.MapResultMsg.map_result)
  return &map_result_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mapreduce::MapResultMsg_KV >&
MapResultMsg::map_result() const {
  // @@protoc_insertion_point(field_list:mapreduce.MapResultMsg.map_result)
  return map_result_;
}

// -------------------------------------------------------------------

// ReduceResultMsg

// uint32 job_id = 1;
inline void ReduceResultMsg::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 ReduceResultMsg::job_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceResultMsg.job_id)
  return job_id_;
}
inline void ReduceResultMsg::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.ReduceResultMsg.job_id)
}

// uint32 subjob_id = 2;
inline void ReduceResultMsg::clear_subjob_id() {
  subjob_id_ = 0u;
}
inline ::google::protobuf::uint32 ReduceResultMsg::subjob_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceResultMsg.subjob_id)
  return subjob_id_;
}
inline void ReduceResultMsg::set_subjob_id(::google::protobuf::uint32 value) {
  
  subjob_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.ReduceResultMsg.subjob_id)
}

// uint32 worker_id = 3;
inline void ReduceResultMsg::clear_worker_id() {
  worker_id_ = 0u;
}
inline ::google::protobuf::uint32 ReduceResultMsg::worker_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceResultMsg.worker_id)
  return worker_id_;
}
inline void ReduceResultMsg::set_worker_id(::google::protobuf::uint32 value) {
  
  worker_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.ReduceResultMsg.worker_id)
}

// .mapreduce.WorkerState state = 4;
inline void ReduceResultMsg::clear_state() {
  state_ = 0;
}
inline ::mapreduce::WorkerState ReduceResultMsg::state() const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceResultMsg.state)
  return static_cast< ::mapreduce::WorkerState >(state_);
}
inline void ReduceResultMsg::set_state(::mapreduce::WorkerState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.ReduceResultMsg.state)
}

// repeated string reduce_result = 5;
inline int ReduceResultMsg::reduce_result_size() const {
  return reduce_result_.size();
}
inline void ReduceResultMsg::clear_reduce_result() {
  reduce_result_.Clear();
}
inline const ::std::string& ReduceResultMsg::reduce_result(int index) const {
  // @@protoc_insertion_point(field_get:mapreduce.ReduceResultMsg.reduce_result)
  return reduce_result_.Get(index);
}
inline ::std::string* ReduceResultMsg::mutable_reduce_result(int index) {
  // @@protoc_insertion_point(field_mutable:mapreduce.ReduceResultMsg.reduce_result)
  return reduce_result_.Mutable(index);
}
inline void ReduceResultMsg::set_reduce_result(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mapreduce.ReduceResultMsg.reduce_result)
  reduce_result_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ReduceResultMsg::set_reduce_result(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:mapreduce.ReduceResultMsg.reduce_result)
  reduce_result_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ReduceResultMsg::set_reduce_result(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  reduce_result_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mapreduce.ReduceResultMsg.reduce_result)
}
inline void ReduceResultMsg::set_reduce_result(int index, const char* value, size_t size) {
  reduce_result_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mapreduce.ReduceResultMsg.reduce_result)
}
inline ::std::string* ReduceResultMsg::add_reduce_result() {
  // @@protoc_insertion_point(field_add_mutable:mapreduce.ReduceResultMsg.reduce_result)
  return reduce_result_.Add();
}
inline void ReduceResultMsg::add_reduce_result(const ::std::string& value) {
  reduce_result_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mapreduce.ReduceResultMsg.reduce_result)
}
#if LANG_CXX11
inline void ReduceResultMsg::add_reduce_result(::std::string&& value) {
  reduce_result_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mapreduce.ReduceResultMsg.reduce_result)
}
#endif
inline void ReduceResultMsg::add_reduce_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  reduce_result_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mapreduce.ReduceResultMsg.reduce_result)
}
inline void ReduceResultMsg::add_reduce_result(const char* value, size_t size) {
  reduce_result_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mapreduce.ReduceResultMsg.reduce_result)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReduceResultMsg::reduce_result() const {
  // @@protoc_insertion_point(field_list:mapreduce.ReduceResultMsg.reduce_result)
  return reduce_result_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReduceResultMsg::mutable_reduce_result() {
  // @@protoc_insertion_point(field_mutable_list:mapreduce.ReduceResultMsg.reduce_result)
  return &reduce_result_;
}

// -------------------------------------------------------------------

// GetResultMsg

// uint32 job_id = 1;
inline void GetResultMsg::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 GetResultMsg::job_id() const {
  // @@protoc_insertion_point(field_get:mapreduce.GetResultMsg.job_id)
  return job_id_;
}
inline void GetResultMsg::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:mapreduce.GetResultMsg.job_id)
}

// -------------------------------------------------------------------

// GetResultReplyMsg

// .mapreduce.MasterReplyMsg reply = 1;
inline bool GetResultReplyMsg::has_reply() const {
  return this != internal_default_instance() && reply_ != NULL;
}
inline void GetResultReplyMsg::clear_reply() {
  if (GetArenaNoVirtual() == NULL && reply_ != NULL) {
    delete reply_;
  }
  reply_ = NULL;
}
inline const ::mapreduce::MasterReplyMsg& GetResultReplyMsg::reply() const {
  const ::mapreduce::MasterReplyMsg* p = reply_;
  // @@protoc_insertion_point(field_get:mapreduce.GetResultReplyMsg.reply)
  return p != NULL ? *p : *reinterpret_cast<const ::mapreduce::MasterReplyMsg*>(
      &::mapreduce::_MasterReplyMsg_default_instance_);
}
inline ::mapreduce::MasterReplyMsg* GetResultReplyMsg::release_reply() {
  // @@protoc_insertion_point(field_release:mapreduce.GetResultReplyMsg.reply)
  
  ::mapreduce::MasterReplyMsg* temp = reply_;
  reply_ = NULL;
  return temp;
}
inline ::mapreduce::MasterReplyMsg* GetResultReplyMsg::mutable_reply() {
  
  if (reply_ == NULL) {
    reply_ = new ::mapreduce::MasterReplyMsg;
  }
  // @@protoc_insertion_point(field_mutable:mapreduce.GetResultReplyMsg.reply)
  return reply_;
}
inline void GetResultReplyMsg::set_allocated_reply(::mapreduce::MasterReplyMsg* reply) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reply_;
  }
  if (reply) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reply = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reply, submessage_arena);
    }
    
  } else {
    
  }
  reply_ = reply;
  // @@protoc_insertion_point(field_set_allocated:mapreduce.GetResultReplyMsg.reply)
}

// repeated string results = 2;
inline int GetResultReplyMsg::results_size() const {
  return results_.size();
}
inline void GetResultReplyMsg::clear_results() {
  results_.Clear();
}
inline const ::std::string& GetResultReplyMsg::results(int index) const {
  // @@protoc_insertion_point(field_get:mapreduce.GetResultReplyMsg.results)
  return results_.Get(index);
}
inline ::std::string* GetResultReplyMsg::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:mapreduce.GetResultReplyMsg.results)
  return results_.Mutable(index);
}
inline void GetResultReplyMsg::set_results(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mapreduce.GetResultReplyMsg.results)
  results_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetResultReplyMsg::set_results(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:mapreduce.GetResultReplyMsg.results)
  results_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetResultReplyMsg::set_results(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  results_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mapreduce.GetResultReplyMsg.results)
}
inline void GetResultReplyMsg::set_results(int index, const char* value, size_t size) {
  results_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mapreduce.GetResultReplyMsg.results)
}
inline ::std::string* GetResultReplyMsg::add_results() {
  // @@protoc_insertion_point(field_add_mutable:mapreduce.GetResultReplyMsg.results)
  return results_.Add();
}
inline void GetResultReplyMsg::add_results(const ::std::string& value) {
  results_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mapreduce.GetResultReplyMsg.results)
}
#if LANG_CXX11
inline void GetResultReplyMsg::add_results(::std::string&& value) {
  results_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mapreduce.GetResultReplyMsg.results)
}
#endif
inline void GetResultReplyMsg::add_results(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  results_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mapreduce.GetResultReplyMsg.results)
}
inline void GetResultReplyMsg::add_results(const char* value, size_t size) {
  results_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mapreduce.GetResultReplyMsg.results)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetResultReplyMsg::results() const {
  // @@protoc_insertion_point(field_list:mapreduce.GetResultReplyMsg.results)
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetResultReplyMsg::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:mapreduce.GetResultReplyMsg.results)
  return &results_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mapreduce

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_master_5fservice_2eproto__INCLUDED
